[{"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\index.tsx":"1","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\styles.ts":"2","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\styles.ts":"3","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\styles.ts":"4","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\index.tsx":"5","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\App.tsx":"6","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\index.tsx":"7","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\styles.ts":"8","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Avatar\\styles.ts":"9","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\index.tsx":"10","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\index.tsx":"11","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\index.tsx":"12","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\styles.ts":"13","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Card\\styles.tsx":"14","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\styles.ts":"15","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\styles\\global.ts":"16","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\styles.ts":"17","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\index.tsx":"18","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\styles.ts":"19","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\index.tsx":"20","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\index.tsx":"21","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\index.tsx":"22","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\index.tsx":"23","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\styles.ts":"24","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\styles.ts":"25","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\index.tsx":"26","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\index.tsx":"27","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\index.tsx":"28","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\styles.ts":"29","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\styles.ts":"30","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\index.tsx":"31","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\index.tsx":"32","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\AuthContext.tsx":"33","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\styles.ts":"34","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\styles.ts":"35","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\index.tsx":"36","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\styles.ts":"37","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\styles.ts":"38","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\Route.tsx":"39","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\index.tsx":"40","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\styles.ts":"41","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\styles.ts":"42","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\index.tsx":"43","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalDeleteExercise\\index.tsx":"44","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\index.tsx":"45","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\styles.ts":"46","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\services\\api.ts":"47","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\components\\ExerciseRow\\index.tsx":"48","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\styles.ts":"49","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\InputTextArea\\styles.ts":"50","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\TrainingSetupContext.tsx":"51","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\index.tsx":"52","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\index.tsx":"53","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\styles.ts":"54","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\index.tsx":"55","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddPlan\\index.tsx":"56","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddPlan\\styles.ts":"57","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Card\\index.tsx":"58","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\SearchInput\\index.tsx":"59","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\index.tsx":"60","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\InputTextArea\\index.tsx":"61","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Avatar\\index.tsx":"62","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalDeleteExercise\\styles.ts":"63","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\SearchInput\\styles.ts":"64","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\styles.ts":"65","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsTrainings\\index.tsx":"66","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsTrainings\\styles.ts":"67","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Drawer\\styles.ts":"68","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Drawer\\index.tsx":"69","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DrawerEditTraining\\index.tsx":"70","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DrawerEditTraining\\styles.ts":"71","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Separator\\index.tsx":"72","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Separator\\styles.ts":"73"},{"size":3055,"mtime":1620611778222,"results":"74","hashOfConfig":"75"},{"size":3258,"mtime":1621734793435,"results":"76","hashOfConfig":"75"},{"size":390,"mtime":1621731078913,"results":"77","hashOfConfig":"75"},{"size":1383,"mtime":1620012300125,"results":"78","hashOfConfig":"75"},{"size":5198,"mtime":1621695333592,"results":"79","hashOfConfig":"75"},{"size":625,"mtime":1620704445416,"results":"80","hashOfConfig":"75"},{"size":5647,"mtime":1622429457552,"results":"81","hashOfConfig":"75"},{"size":1471,"mtime":1622338596013,"results":"82","hashOfConfig":"75"},{"size":918,"mtime":1620012133827,"results":"83","hashOfConfig":"75"},{"size":1282,"mtime":1620958241621,"results":"84","hashOfConfig":"75"},{"size":451,"mtime":1619980611085,"results":"85","hashOfConfig":"75"},{"size":3036,"mtime":1622430506922,"results":"86","hashOfConfig":"75"},{"size":241,"mtime":1621696683139,"results":"87","hashOfConfig":"75"},{"size":1365,"mtime":1619980611088,"results":"88","hashOfConfig":"75"},{"size":834,"mtime":1619980611098,"results":"89","hashOfConfig":"75"},{"size":3052,"mtime":1622433133402,"results":"90","hashOfConfig":"75"},{"size":2037,"mtime":1619980611148,"results":"91","hashOfConfig":"75"},{"size":5088,"mtime":1622308157469,"results":"92","hashOfConfig":"75"},{"size":2040,"mtime":1621736206502,"results":"93","hashOfConfig":"75"},{"size":2439,"mtime":1622417424815,"results":"94","hashOfConfig":"75"},{"size":2308,"mtime":1619980611098,"results":"95","hashOfConfig":"75"},{"size":837,"mtime":1620611061547,"results":"96","hashOfConfig":"75"},{"size":1845,"mtime":1620919178586,"results":"97","hashOfConfig":"75"},{"size":1434,"mtime":1620650105096,"results":"98","hashOfConfig":"75"},{"size":593,"mtime":1619980611091,"results":"99","hashOfConfig":"75"},{"size":2173,"mtime":1619980611138,"results":"100","hashOfConfig":"75"},{"size":5640,"mtime":1620608032900,"results":"101","hashOfConfig":"75"},{"size":1875,"mtime":1619980611101,"results":"102","hashOfConfig":"75"},{"size":4040,"mtime":1622339280079,"results":"103","hashOfConfig":"75"},{"size":975,"mtime":1622433217548,"results":"104","hashOfConfig":"75"},{"size":3094,"mtime":1622321112962,"results":"105","hashOfConfig":"75"},{"size":1334,"mtime":1622422195084,"results":"106","hashOfConfig":"75"},{"size":2206,"mtime":1620618119611,"results":"107","hashOfConfig":"75"},{"size":1553,"mtime":1619980611101,"results":"108","hashOfConfig":"75"},{"size":1098,"mtime":1620012133830,"results":"109","hashOfConfig":"75"},{"size":198,"mtime":1619980611146,"results":"110","hashOfConfig":"75"},{"size":608,"mtime":1621736827791,"results":"111","hashOfConfig":"75"},{"size":3417,"mtime":1620958511945,"results":"112","hashOfConfig":"75"},{"size":785,"mtime":1620612736251,"results":"113","hashOfConfig":"75"},{"size":671,"mtime":1619980611094,"results":"114","hashOfConfig":"75"},{"size":2477,"mtime":1620012133830,"results":"115","hashOfConfig":"75"},{"size":1149,"mtime":1620957726985,"results":"116","hashOfConfig":"75"},{"size":5329,"mtime":1622417639054,"results":"117","hashOfConfig":"75"},{"size":1245,"mtime":1619980611137,"results":"118","hashOfConfig":"75"},{"size":2358,"mtime":1622417391369,"results":"119","hashOfConfig":"75"},{"size":1523,"mtime":1619980611138,"results":"120","hashOfConfig":"75"},{"size":116,"mtime":1619980611157,"results":"121","hashOfConfig":"75"},{"size":1538,"mtime":1620697019439,"results":"122","hashOfConfig":"75"},{"size":2219,"mtime":1619980611150,"results":"123","hashOfConfig":"75"},{"size":322,"mtime":1619980611097,"results":"124","hashOfConfig":"75"},{"size":2418,"mtime":1621110675197,"results":"125","hashOfConfig":"75"},{"size":1692,"mtime":1621701675536,"results":"126","hashOfConfig":"75"},{"size":838,"mtime":1622342841267,"results":"127","hashOfConfig":"75"},{"size":1566,"mtime":1621702531005,"results":"128","hashOfConfig":"75"},{"size":768,"mtime":1621732251357,"results":"129","hashOfConfig":"75"},{"size":2454,"mtime":1621693452874,"results":"130","hashOfConfig":"75"},{"size":648,"mtime":1621397008191,"results":"131","hashOfConfig":"75"},{"size":606,"mtime":1619980611087,"results":"132","hashOfConfig":"75"},{"size":882,"mtime":1619980611142,"results":"133","hashOfConfig":"75"},{"size":449,"mtime":1619980611090,"results":"134","hashOfConfig":"75"},{"size":522,"mtime":1619980611096,"results":"135","hashOfConfig":"75"},{"size":581,"mtime":1619980611083,"results":"136","hashOfConfig":"75"},{"size":682,"mtime":1619980967597,"results":"137","hashOfConfig":"75"},{"size":677,"mtime":1619980611143,"results":"138","hashOfConfig":"75"},{"size":475,"mtime":1621703992376,"results":"139","hashOfConfig":"75"},{"size":1187,"mtime":1621910379396,"results":"140","hashOfConfig":"75"},{"size":1566,"mtime":1621702531005,"results":"141","hashOfConfig":"75"},{"size":752,"mtime":1622433013466,"results":"142","hashOfConfig":"75"},{"size":880,"mtime":1622431319123,"results":"143","hashOfConfig":"75"},{"size":4163,"mtime":1622430346997,"results":"144","hashOfConfig":"75"},{"size":676,"mtime":1622396269708,"results":"145","hashOfConfig":"75"},{"size":295,"mtime":1622340740234,"results":"146","hashOfConfig":"75"},{"size":261,"mtime":1622340732492,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mln35o",{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"171"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"245"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"171"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"183"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"242"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\styles.ts",[],["320","321","322","323","324"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\styles.ts",[],["325","326","327","328","329"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\index.tsx",["330"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Select, { OptionsType } from 'react-select';\nimport Button from '../../components/ButtonRod';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\nimport ModalAddPlan from '../../components/ModalAddPlan';\nimport Tabs from '../../components/TabsPlans';\nimport { useTrainingSetup } from '../../hooks/TrainingSetupContext';\nimport api from '../../services/api';\nimport ExerciseRow from './components/ExerciseRow';\nimport * as S from './styles';\n\ninterface HistoryProps {\n  idSelected: string;\n}\n\nexport interface PlanProps {\n  id: string;\n  description: string;\n}\n\ninterface Exercises {\n  id: string;\n  name: string;\n  exercise_group: string;\n  link: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\ninterface ExercisesSelectedProps {\n  value: string;\n  label: string;\n}\n\ninterface Prescription {\n  prescriptionId: string;\n  repetition: string;\n  serie: string;\n  weight: string;\n  interval: string;\n  observation: string;\n}\n\ninterface TrainingContextCompletedProps {\n  planName: string;\n  exercises: ExercisesSelectedContextProps[];\n}\n\ninterface ExercisesSelectedContextProps {\n  value: string;\n  label: string;\n  prescription: Prescription;\n}\n\nconst Plans: React.FC = () => {\n  const location = useLocation<HistoryProps>();\n  const { idSelected: planIdSelected } = location.state;\n\n  const [plans, setPlans] = useState<PlanProps[]>([] as PlanProps[]);\n  const [openModal, setOpenModal] = useState(false);\n  const [exercises, setExercises] = useState<Exercises[]>([]);\n  const [selectedExercises, setSelectedExercises] = useState<\n    ExercisesSelectedProps[]\n  >([]);\n\n  const handleToggleModalAddPlan = useCallback(() => {\n    setOpenModal(!openModal);\n  }, [openModal]);\n\n  const { setupPlan, tabPlanContext } = useTrainingSetup();\n\n  const mockPrescription = {\n    prescriptionId: '1',\n    repetition: 'string',\n    serie: 'string',\n    weight: 'string',\n    interval: 'string',\n    observation: 'string',\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function mountObjectTrainingCompleted(\n    selectedTab: string,\n  ): TrainingContextCompletedProps {\n    let newExercises: ExercisesSelectedContextProps[] = [];\n    newExercises = [];\n\n    selectedExercises.map(item => {\n      return newExercises.push({\n        ...item,\n        prescription: mockPrescription,\n      });\n    });\n\n    return {\n      planName: selectedTab,\n      exercises: newExercises,\n    };\n  }\n\n  useEffect(() => {\n    setupPlan(mountObjectTrainingCompleted(tabPlanContext));\n  }, [selectedExercises, tabPlanContext]);\n\n  const options = getNameExercises(exercises);\n\n  // eslint-disable-next-line no-shadow\n  function getNameExercises(exercises: Exercises[]): ExercisesSelectedProps[] {\n    const res = exercises.map(({ id, name }) => {\n      return { value: id, label: name };\n    });\n    return res;\n  }\n\n  useEffect(() => {\n    api.get('/exercises').then(response => {\n      setExercises(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    const getPlansToUser = async (id: string): Promise<void> => {\n      await api.get(`/plans/${id}`).then(response => {\n        setPlans(response.data);\n      });\n    };\n    getPlansToUser(planIdSelected);\n  }, [planIdSelected, plans]);\n\n  function handleSetSelectedExercises(\n    exercisesSel: OptionsType<ExercisesSelectedProps>,\n  ): void {\n    setSelectedExercises(exercisesSel as ExercisesSelectedProps[]);\n  }\n\n  return (\n    <>\n      <MenuBar />\n      <div id=\"mainContainer\">\n        <Header />\n        <S.Container>\n          <S.LabelAndButton>\n            <h1>Plan</h1>\n            <Button outlined outlinedColor=\"#FFBA01\" type=\"submit\">\n              SALVAR TREINO\n            </Button>\n          </S.LabelAndButton>\n\n          <Tabs\n            tabsApi={plans}\n            handleOpenModal={openModalState => setOpenModal(openModalState)}\n          />\n\n          <S.SelectContainer>\n            <S.SelectAndButton>\n              <Select\n                options={options}\n                isMulti\n                onChange={(e: OptionsType<ExercisesSelectedProps>) => {\n                  handleSetSelectedExercises(e);\n                }}\n              />\n            </S.SelectAndButton>\n            <Button background=\"#FFBA01\">CADASTRAR EXERCÍCIO</Button>\n          </S.SelectContainer>\n\n          <table>\n            <thead>\n              <tr>\n                <th>Nome</th>\n                <th>Séries</th>\n                <th>Repetições</th>\n                <th>Carga</th>\n                <th>Intervalo</th>\n                <th>Observação</th>\n                <th>Excluir</th>\n              </tr>\n            </thead>\n            <tbody>\n              {selectedExercises &&\n                selectedExercises.map(({ label, value }) => (\n                  <ExerciseRow key={value} nameExercise={label}>\n                    {label}\n                  </ExerciseRow>\n                ))}\n            </tbody>\n          </table>\n        </S.Container>\n        <ModalAddPlan isOpen={openModal} setIsOpen={handleToggleModalAddPlan} />\n      </div>\n    </>\n  );\n};\n\nexport default Plans;\n",["331","332","333","334","335"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\App.tsx",[],["336","337","338","339","340"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Avatar\\styles.ts",[],["341","342","343","344","345"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\index.tsx",[],["346","347","348","349","350"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\index.tsx",["351"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Card\\styles.tsx",[],["352","353","354","355","356"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\styles\\global.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\index.tsx",["357"],"import React, { useCallback, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FiUserPlus } from 'react-icons/fi';\nimport { toast } from 'react-toastify';\nimport api from '../../services/api';\nimport ButtonRod from '../ButtonRod';\nimport { InputTextArea } from '../InputTextArea';\nimport Modal from '../Modal';\nimport { LogoAndTitleModal } from '../ModalAddPlan/styles';\nimport { NewInput } from '../NewInput';\nimport { NewSelect } from '../NewSelect';\nimport { Form, Label, Switch, ContainerSwitch } from './styles';\n\ninterface StudentProps {\n  full_name: string;\n  cpf: string;\n  date_of_birth: string;\n  active: boolean;\n  email: string;\n  phone: string;\n  password: string;\n  last_acess: string;\n  photo: string;\n  plan_type: string;\n  observation: string;\n}\n\n// type FormProps = StudentProps & { password_confirmation: string };\n\ninterface IModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n  updateStudents(): void;\n}\n\nconst ModalAddStudent: React.FC<IModalProps> = ({\n  isOpen = false,\n  setIsOpen,\n  updateStudents,\n  // handleAddStudent,\n}) => {\n  const { register, handleSubmit } = useForm();\n\n  const [isActive, setIsActive] = useState(false);\n\n  function handle(data: StudentProps): void {\n    const currentDate = String(new Date(Date.now()));\n\n    const newData = { ...data, last_acess: currentDate };\n\n    handleStudentSubmit(newData);\n    setIsOpen();\n  }\n\n  const plans = [\n    { label: 'Quinzenal', value: 'Quinzenal' },\n    { label: 'Semestral', value: 'Semestral' },\n    { label: 'Personal', value: 'Personal' },\n  ];\n\n  const handleStudentSubmit = useCallback(\n    async (student: StudentProps): Promise<void> => {\n      try {\n        await api.post('/users', student);\n\n        updateStudents();\n        toast.success('Aluno cadastrado com sucesso!');\n      } catch (error) {\n        console.log(error);\n        toast.error(\n          'Ocorreu um erro ao cadastrar um aluno, tente novamente mais tarde!',\n        );\n      }\n    },\n    [],\n  );\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen} typeModal=\"large\">\n      <Form onSubmit={handleSubmit(handle)}>\n        <LogoAndTitleModal>\n          <FiUserPlus size={24} />\n          <p>Cadastrar aluno</p>\n        </LogoAndTitleModal>\n\n        <div className=\"two-inputs\">\n          <div>\n            <Label>Nome do aluno</Label>\n            <NewInput\n              placeholder=\"Ex: Fulano de tal\"\n              required\n              {...register('full_name')}\n            />\n          </div>\n          <div>\n            <Label>Tipo de plano</Label>\n            <NewSelect values={plans} {...register('plan_type')} />\n          </div>\n          <div>\n            <Label>CPF</Label>\n            <NewInput\n              type=\"text\"\n              placeholder=\"00011122233\"\n              required\n              {...register('cpf')}\n            />\n          </div>\n        </div>\n\n        <div className=\"two-inputs\">\n          <div>\n            <Label>Data de nascimento</Label>\n            <NewInput\n              type=\"date\"\n              placeholder=\"01/12/2000\"\n              required\n              {...register('date_of_birth')}\n            />\n          </div>\n          <div>\n            <Label>Contato</Label>\n            <NewInput\n              type=\"tel\"\n              placeholder=\"(88) 9 1122-3344\"\n              required\n              {...register('phone')}\n            />\n          </div>\n          <div>\n            <Label>Email</Label>\n            <NewInput\n              type=\"email\"\n              placeholder=\"fulano@tal.com\"\n              required\n              {...register('email')}\n            />\n          </div>\n        </div>\n\n        <div className=\"two-inputs\">\n          <div>\n            <Label>Senha</Label>\n\n            <NewInput type=\"password\" required {...register('password')} />\n          </div>\n          <div>\n            <Label>Confirmação de senha</Label>\n            <NewInput name=\"password_confirmation\" type=\"password\" required />\n          </div>\n          <div className=\"switch\">\n            <Label>Aluno ativo?</Label>\n            <ContainerSwitch>\n              <Switch onClick={() => setIsActive(!isActive)}>\n                <input\n                  type=\"checkbox\"\n                  checked={isActive}\n                  // onChange={() => console.log(!isActive)}\n                  {...register('active')}\n                />\n                <span className=\"slider round\" />\n              </Switch>\n            </ContainerSwitch>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <Label>Observações?</Label>\n            <InputTextArea {...register('observation')} />\n          </div>\n        </div>\n\n        <ButtonRod fullWidth heightSize=\"large\" type=\"submit\">\n          Cadastrar\n        </ButtonRod>\n\n        {/* <button type=\"submit\" data-testid=\"add-student-button\">\n          <p className=\"text\">Adicionar aluno</p>\n          <div className=\"icon\">\n            <FiUserPlus size={24} />\n          </div>\n        </button> */}\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ModalAddStudent;\n","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\styles.ts",[],["358","359","360","361","362"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\index.tsx",[],["363","364","365","366","367"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\index.tsx",[],["368","369","370","371","372"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\styles.ts",[],["373","374","375","376","377"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\index.tsx",["378"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\index.tsx",["379","380"],"import React, { useEffect, useState, useCallback } from 'react';\nimport { FiYoutube, FiEdit, FiTrash2 } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport ModalAddExercise from '../../components/ModalAddExercise';\nimport ModalEditExercise from '../../components/ModalEditExercise';\nimport ModalDeleteExercise from '../../components/ModalDeleteExercise';\n\nimport {\n  Container,\n  Welcome,\n  Message,\n  ScreenName,\n  ExerciseList,\n  Head,\n  HeadColumn,\n  RegisterButton,\n  Body,\n  Line,\n  Column,\n  Name,\n  Group,\n  LinkVideo,\n  Actions,\n  EmptySpace,\n} from './styles';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\n\ninterface IExercise {\n  exercise_group: string;\n  id: string;\n  link: string;\n  name: string;\n}\n\nconst Exercises: React.FC = () => {\n  const [exercises, setExercises] = useState<IExercise[]>([]);\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [editingExercise, setEditingExercise] = useState<IExercise>(\n    {} as IExercise,\n  );\n  const [deletingExercise, setDeletingExercise] = useState('');\n\n  useEffect(() => {\n    async function getExercises(): Promise<void> {\n      const { data: exercisesReturned } = await api.get<IExercise[]>(\n        '/exercises',\n      );\n\n      setExercises(exercisesReturned);\n    }\n\n    getExercises();\n  }, [setExercises, refresh]);\n\n  const handleToggleModal = useCallback(() => {\n    setModalOpen(!modalOpen);\n  }, [modalOpen]);\n\n  const handleToggleEditModal = useCallback(() => {\n    setEditModalOpen(!editModalOpen);\n  }, [editModalOpen]);\n\n  const handleToggleDeleteModal = useCallback(\n    (id: string) => {\n      setDeleteModalOpen(!deleteModalOpen);\n      setDeletingExercise(id);\n    },\n    [deleteModalOpen],\n  );\n\n  const handleAddExercise = useCallback(\n    async (newExercise: IExercise) => {\n      try {\n        const { data: exerciseCreated } = await api.post<IExercise>(\n          '/exercises',\n          newExercise,\n        );\n\n        setExercises([...exercises, exerciseCreated]);\n      } catch ({ err }) {\n        console.log(err);\n      }\n    },\n    [exercises],\n  );\n\n  const handleUpdateExercise = useCallback(async (exercise: IExercise) => {\n    try {\n      await api.put(`/exercises/${exercise.id}`, exercise);\n      setRefresh(!refresh);\n    } catch ({ err }) {\n      console.log(err);\n    }\n  }, []);\n\n  const handleDeleteExercise = useCallback(async (id: string) => {\n    console.log(id);\n    try {\n      await api.delete(`/exercises/${id}`);\n      setRefresh(!refresh);\n    } catch ({ err }) {\n      console.log(err);\n    }\n  }, []);\n\n  const handleEditExercise = useCallback(\n    (exercise: IExercise) => {\n      setEditingExercise(exercise);\n      handleToggleEditModal();\n    },\n    [handleToggleEditModal],\n  );\n\n  return (\n    <>\n      <MenuBar />\n\n      <div id=\"mainContainer\">\n        <Header />\n\n        <Container>\n          <Welcome>\n            <Message>Bem vindo, FULANO DE TAL</Message>\n            <ScreenName>Exercícios</ScreenName>\n          </Welcome>\n\n          <ExerciseList>\n            <Head>\n              <HeadColumn>NOME</HeadColumn>\n              <HeadColumn>GRUPO DO EXERCÍCIO</HeadColumn>\n              <HeadColumn center>LINK DO VÍDEO</HeadColumn>\n              <HeadColumn center>AÇÕES</HeadColumn>\n              <HeadColumn>\n                <RegisterButton onClick={() => handleToggleModal()}>\n                  CADASTRAR EXERCÍCIO\n                </RegisterButton>\n              </HeadColumn>\n            </Head>\n            <Body>\n              {exercises.map(({ id, name, exercise_group, link }) => (\n                <Line key={id}>\n                  <Column>\n                    <Name>{name}</Name>\n                  </Column>\n                  <Column>\n                    <Group>{exercise_group}</Group>\n                  </Column>\n                  <Column center>\n                    <LinkVideo href={link} target=\"_blank\">\n                      <FiYoutube />\n                    </LinkVideo>\n                  </Column>\n                  <Column>\n                    <Actions>\n                      <FiEdit\n                        onClick={() => {\n                          handleEditExercise({\n                            id,\n                            name,\n                            exercise_group,\n                            link,\n                          });\n                        }}\n                      />\n                      <FiTrash2 onClick={() => handleToggleDeleteModal(id)} />\n                    </Actions>\n                  </Column>\n                  <Column>\n                    <EmptySpace />\n                  </Column>\n                </Line>\n              ))}\n            </Body>\n          </ExerciseList>\n\n          <ModalAddExercise\n            isOpen={modalOpen}\n            setIsOpen={handleToggleModal}\n            handleAddExercise={handleAddExercise}\n          />\n\n          <ModalEditExercise\n            isOpen={editModalOpen}\n            setIsOpen={handleToggleEditModal}\n            handleUpdateExercise={handleUpdateExercise}\n            editingExercise={editingExercise}\n          />\n\n          <ModalDeleteExercise\n            isOpen={deleteModalOpen}\n            setIsOpen={() => setDeleteModalOpen(!deleteModalOpen)}\n            handleDeleteExercise={handleDeleteExercise}\n            deletingExercise={deletingExercise}\n          />\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Exercises;\n",["381","382","383","384","385"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\index.tsx",[],["386","387","388","389","390"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\index.tsx",["391","392"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\AuthContext.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\styles.ts",[],["393","394","395","396","397"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\index.tsx",[],["398","399","400","401","402"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\styles.ts",[],["403","404","405","406","407"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\Route.tsx",[],["408","409","410","411","412"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\styles.ts",[],["413","414","415","416","417"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalDeleteExercise\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\index.tsx",["418"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\services\\api.ts",[],["419","420","421","422","423"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\components\\ExerciseRow\\index.tsx",["424","425"],"import React, { useState } from 'react';\n\ninterface ExerciseRowProps {\n  nameExercise: string;\n}\n\ninterface PrescriptionProps {\n  repetition: string;\n  serie: string;\n  weight: string;\n  interval: string;\n  observation: string;\n}\n\nconst ExerciseRow: React.FC<ExerciseRowProps> = ({\n  children,\n  nameExercise,\n}) => {\n  const [prescription, setPrescription] = useState<PrescriptionProps>(\n    {} as PrescriptionProps,\n  );\n  const [nameExerciseRow, setNameExerciseRow] = useState(nameExercise);\n\n  function handleOnChange(name: string, event: string): void {\n    // const newValue = Object.assign(name, event);\n\n    setPrescription(\n      Object.assign(prescription, {\n        name,\n        event,\n      }),\n    );\n  }\n\n  return (\n    <tr>\n      <td>{children}</td>\n      <td>\n        <input\n          type=\"text\"\n          onChange={e => handleOnChange('repetion', e.target.value)}\n        />\n      </td>\n\n      <td>\n        <input\n          type=\"text\"\n          onChange={e => handleOnChange('serie', e.target.value)}\n        />\n      </td>\n\n      <td>\n        <input\n          type=\"text\"\n          onChange={e => handleOnChange('weight', e.target.value)}\n        />\n      </td>\n\n      <td>\n        <input\n          type=\"text\"\n          onChange={e => handleOnChange('interval', e.target.value)}\n        />\n      </td>\n\n      <td>\n        <input\n          type=\"text\"\n          onChange={e => handleOnChange('observation', e.target.value)}\n        />\n      </td>\n      <td>Excluir</td>\n    </tr>\n  );\n};\n\nexport default ExerciseRow;\n","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\InputTextArea\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\TrainingSetupContext.tsx",["426","427","428"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\index.tsx",["429"],"import React, { useEffect, useState } from 'react';\nimport { ReactModalComponent } from './styles';\n\ninterface IModalProps {\n  children: any;\n  isOpen: boolean;\n  setIsOpen: () => void;\n  typeModal?: 'large' | 'medium';\n}\n\nconst Modal: React.FC<IModalProps> = ({\n  children,\n  isOpen,\n  setIsOpen,\n  typeModal,\n}: IModalProps) => {\n  const [modalStatus, setModalStatus] = useState(isOpen);\n\n  useEffect(() => {\n    setModalStatus(isOpen);\n  }, [isOpen]);\n\n  return (\n    <ReactModalComponent\n      isOpen={modalStatus}\n      shouldCloseOnOverlayClick={!false}\n      ariaHideApp={false}\n      onRequestClose={setIsOpen}\n      overlayClassName=\"react-modal-overlay\"\n      className=\"react-modal-content\"\n      closeTimeoutMS={900}\n      typeModal={typeModal}\n    >\n      {children}\n    </ReactModalComponent>\n  );\n};\n\nexport default Modal;\n","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\index.tsx",[],["430","431","432","433","434"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddPlan\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddPlan\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Card\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\SearchInput\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\InputTextArea\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Avatar\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalDeleteExercise\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\SearchInput\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsTrainings\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsTrainings\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Drawer\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Drawer\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DrawerEditTraining\\index.tsx",["435","436","437","438"],"import { getDate, parseISO, format } from 'date-fns';\nimport React, { useCallback, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { MdFitnessCenter } from 'react-icons/md';\nimport { useLocation } from 'react-router';\nimport { toast } from 'react-toastify';\nimport api from '../../services/api';\nimport ButtonRod from '../ButtonRod';\nimport Drawer from '../Drawer';\nimport { InputTextArea } from '../InputTextArea';\nimport { NewInput } from '../NewInput';\nimport Separator from '../Separator';\nimport * as S from './styles';\n\ninterface TrainingProps {\n  id: string;\n  name: string;\n  observation: string;\n  note: string;\n  expiration_date: string;\n  user_id: string;\n}\n\ntype Inputs = {\n  name: string;\n  observation: string;\n  note: string;\n  expiration_date: string;\n};\n\ninterface DrawerEditTraining {\n  isOpen: boolean;\n  setIsOpen: () => void;\n  handleEditExercise?: (exercise: any) => void;\n  titleDrawer: string;\n  updateTrainings?(): void;\n  training: TrainingProps;\n}\n\ninterface HistoryProps {\n  idSelected: string;\n}\n\nconst DrawerEditTraining: React.FC<DrawerEditTraining> = ({\n  setIsOpen,\n  isOpen,\n  titleDrawer,\n  updateTrainings,\n  training,\n}) => {\n  const { register, handleSubmit, reset } = useForm<Inputs>({\n    defaultValues: {\n      name: training?.name,\n      expiration_date: training?.expiration_date,\n      observation: training?.observation,\n      note: training?.note,\n    },\n  });\n\n  let formattedDate;\n  if (training?.expiration_date) {\n    formattedDate = format(new Date(training.expiration_date), 'yyyy-MM-dd');\n  }\n\n  useEffect(() => {\n    reset();\n  }, [training]);\n\n  const location = useLocation<HistoryProps>();\n  const { idSelected } = location.state;\n\n  function handleAddTrainingSubmit(data: TrainingProps): void {\n    const newData = {\n      ...data,\n      id: training.id,\n      user_id: idSelected,\n      expiration_date: parseISO(data.expiration_date).toISOString(),\n    };\n\n    handleAddTraining(newData);\n\n    setIsOpen();\n  }\n\n  const handleAddTraining = useCallback(\n    async (trainingItem: TrainingProps): Promise<void> => {\n      try {\n        await api.put(`/trainings/${trainingItem?.id}`, trainingItem);\n        if (updateTrainings) {\n          updateTrainings();\n        }\n\n        toast.success('Treino atualizado com sucesso!');\n      } catch (error) {\n        toast.error(error.response.data.error);\n      }\n    },\n    [],\n  );\n\n  return (\n    <Drawer\n      isOpen={isOpen}\n      setIsOpen={() => {\n        reset();\n        setIsOpen();\n      }}\n      typeDrawer=\"medium\"\n    >\n      <S.DrawerHeader>\n        <MdFitnessCenter />\n        {titleDrawer}\n      </S.DrawerHeader>\n      <Separator color=\"#f0f0f0\" />\n      <S.DrawerBody>\n        <form onSubmit={handleSubmit(handleAddTrainingSubmit)}>\n          <S.LabelAndInputArea>\n            <S.Label>Nome do Treino</S.Label>\n            <NewInput\n              placeholder=\"Ex: Supino\"\n              required\n              {...register('name')}\n              defaultValue={training?.name}\n            />\n          </S.LabelAndInputArea>\n          <S.LabelAndInputArea>\n            <S.Label>Data de expiração</S.Label>\n\n            <NewInput\n              required\n              type=\"date\"\n              {...register('expiration_date')}\n              defaultValue={formattedDate}\n            />\n          </S.LabelAndInputArea>\n          <S.LabelAndInputArea>\n            <S.Label>Observações para o aluno</S.Label>\n            <InputTextArea\n              placeholder=\"Ex: Observações para o aluno\"\n              {...register('observation')}\n              defaultValue={training?.observation}\n            />\n          </S.LabelAndInputArea>\n          <S.LabelAndInputArea>\n            <S.Label>Anotações</S.Label>\n\n            <InputTextArea\n              placeholder=\"Ex: Anotações\"\n              {...register('note')}\n              defaultValue={training?.note}\n            />\n          </S.LabelAndInputArea>\n\n          <ButtonRod fullWidth heightSize=\"large\" type=\"submit\">\n            Cadastrar\n          </ButtonRod>\n        </form>\n      </S.DrawerBody>\n    </Drawer>\n  );\n};\n\nexport default DrawerEditTraining;\n","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DrawerEditTraining\\styles.ts",["439"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Separator\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Separator\\styles.ts",[],{"ruleId":"440","replacedBy":"441"},{"ruleId":"442","replacedBy":"443"},{"ruleId":"444","replacedBy":"445"},{"ruleId":"446","replacedBy":"447"},{"ruleId":"448","replacedBy":"449"},{"ruleId":"440","replacedBy":"450"},{"ruleId":"442","replacedBy":"451"},{"ruleId":"444","replacedBy":"452"},{"ruleId":"446","replacedBy":"453"},{"ruleId":"448","replacedBy":"454"},{"ruleId":"455","severity":1,"message":"456","line":105,"column":6,"nodeType":"457","endLine":105,"endColumn":41,"suggestions":"458"},{"ruleId":"440","replacedBy":"459"},{"ruleId":"442","replacedBy":"460"},{"ruleId":"444","replacedBy":"461"},{"ruleId":"446","replacedBy":"462"},{"ruleId":"448","replacedBy":"463"},{"ruleId":"440","replacedBy":"464"},{"ruleId":"442","replacedBy":"465"},{"ruleId":"444","replacedBy":"466"},{"ruleId":"446","replacedBy":"467"},{"ruleId":"448","replacedBy":"468"},{"ruleId":"440","replacedBy":"469"},{"ruleId":"442","replacedBy":"470"},{"ruleId":"444","replacedBy":"471"},{"ruleId":"446","replacedBy":"472"},{"ruleId":"448","replacedBy":"473"},{"ruleId":"440","replacedBy":"474"},{"ruleId":"442","replacedBy":"475"},{"ruleId":"444","replacedBy":"476"},{"ruleId":"446","replacedBy":"477"},{"ruleId":"448","replacedBy":"478"},{"ruleId":"455","severity":1,"message":"479","line":65,"column":5,"nodeType":"457","endLine":65,"endColumn":7,"suggestions":"480"},{"ruleId":"440","replacedBy":"481"},{"ruleId":"442","replacedBy":"482"},{"ruleId":"444","replacedBy":"483"},{"ruleId":"446","replacedBy":"484"},{"ruleId":"448","replacedBy":"485"},{"ruleId":"455","severity":1,"message":"486","line":75,"column":5,"nodeType":"457","endLine":75,"endColumn":7,"suggestions":"487"},{"ruleId":"440","replacedBy":"488"},{"ruleId":"442","replacedBy":"489"},{"ruleId":"444","replacedBy":"490"},{"ruleId":"446","replacedBy":"491"},{"ruleId":"448","replacedBy":"492"},{"ruleId":"440","replacedBy":"493"},{"ruleId":"442","replacedBy":"494"},{"ruleId":"444","replacedBy":"495"},{"ruleId":"446","replacedBy":"496"},{"ruleId":"448","replacedBy":"497"},{"ruleId":"440","replacedBy":"498"},{"ruleId":"442","replacedBy":"499"},{"ruleId":"444","replacedBy":"500"},{"ruleId":"446","replacedBy":"501"},{"ruleId":"448","replacedBy":"502"},{"ruleId":"440","replacedBy":"503"},{"ruleId":"442","replacedBy":"504"},{"ruleId":"444","replacedBy":"505"},{"ruleId":"446","replacedBy":"506"},{"ruleId":"448","replacedBy":"507"},{"ruleId":"508","severity":1,"message":"509","line":3,"column":16,"nodeType":"510","messageId":"511","endLine":3,"endColumn":20},{"ruleId":"455","severity":1,"message":"512","line":101,"column":6,"nodeType":"457","endLine":101,"endColumn":8,"suggestions":"513"},{"ruleId":"455","severity":1,"message":"512","line":111,"column":6,"nodeType":"457","endLine":111,"endColumn":8,"suggestions":"514"},{"ruleId":"440","replacedBy":"515"},{"ruleId":"442","replacedBy":"516"},{"ruleId":"444","replacedBy":"517"},{"ruleId":"446","replacedBy":"518"},{"ruleId":"448","replacedBy":"519"},{"ruleId":"440","replacedBy":"520"},{"ruleId":"442","replacedBy":"521"},{"ruleId":"444","replacedBy":"522"},{"ruleId":"446","replacedBy":"523"},{"ruleId":"448","replacedBy":"524"},{"ruleId":"508","severity":1,"message":"525","line":1,"column":17,"nodeType":"510","messageId":"511","endLine":1,"endColumn":28},{"ruleId":"508","severity":1,"message":"526","line":23,"column":52,"nodeType":"510","messageId":"511","endLine":23,"endColumn":62},{"ruleId":"440","replacedBy":"527"},{"ruleId":"442","replacedBy":"528"},{"ruleId":"444","replacedBy":"529"},{"ruleId":"446","replacedBy":"530"},{"ruleId":"448","replacedBy":"531"},{"ruleId":"440","replacedBy":"532"},{"ruleId":"442","replacedBy":"533"},{"ruleId":"444","replacedBy":"534"},{"ruleId":"446","replacedBy":"535"},{"ruleId":"448","replacedBy":"536"},{"ruleId":"440","replacedBy":"537"},{"ruleId":"442","replacedBy":"538"},{"ruleId":"444","replacedBy":"539"},{"ruleId":"446","replacedBy":"540"},{"ruleId":"448","replacedBy":"541"},{"ruleId":"440","replacedBy":"542"},{"ruleId":"442","replacedBy":"543"},{"ruleId":"444","replacedBy":"544"},{"ruleId":"446","replacedBy":"545"},{"ruleId":"448","replacedBy":"546"},{"ruleId":"440","replacedBy":"547"},{"ruleId":"442","replacedBy":"548"},{"ruleId":"444","replacedBy":"549"},{"ruleId":"446","replacedBy":"550"},{"ruleId":"448","replacedBy":"551"},{"ruleId":"508","severity":1,"message":"552","line":1,"column":17,"nodeType":"510","messageId":"511","endLine":1,"endColumn":26},{"ruleId":"440","replacedBy":"553"},{"ruleId":"442","replacedBy":"554"},{"ruleId":"444","replacedBy":"555"},{"ruleId":"446","replacedBy":"556"},{"ruleId":"448","replacedBy":"557"},{"ruleId":"508","severity":1,"message":"558","line":22,"column":10,"nodeType":"510","messageId":"511","endLine":22,"endColumn":25},{"ruleId":"508","severity":1,"message":"559","line":22,"column":27,"nodeType":"510","messageId":"511","endLine":22,"endColumn":45},{"ruleId":"508","severity":1,"message":"552","line":6,"column":3,"nodeType":"510","messageId":"511","endLine":6,"endColumn":12},{"ruleId":"508","severity":1,"message":"560","line":10,"column":11,"nodeType":"510","messageId":"511","endLine":10,"endColumn":19},{"ruleId":"455","severity":1,"message":"561","line":73,"column":6,"nodeType":"457","endLine":73,"endColumn":8,"suggestions":"562"},{"ruleId":"563","severity":1,"message":"564","line":5,"column":13,"nodeType":"565","messageId":"566","endLine":5,"endColumn":16,"suggestions":"567"},{"ruleId":"440","replacedBy":"568"},{"ruleId":"442","replacedBy":"569"},{"ruleId":"444","replacedBy":"570"},{"ruleId":"446","replacedBy":"571"},{"ruleId":"448","replacedBy":"572"},{"ruleId":"508","severity":1,"message":"573","line":1,"column":10,"nodeType":"510","messageId":"511","endLine":1,"endColumn":17},{"ruleId":"563","severity":1,"message":"564","line":34,"column":35,"nodeType":"565","messageId":"566","endLine":34,"endColumn":38,"suggestions":"574"},{"ruleId":"455","severity":1,"message":"575","line":67,"column":6,"nodeType":"457","endLine":67,"endColumn":16,"suggestions":"576"},{"ruleId":"455","severity":1,"message":"577","line":98,"column":5,"nodeType":"457","endLine":98,"endColumn":7,"suggestions":"578"},{"ruleId":"508","severity":1,"message":"579","line":2,"column":8,"nodeType":"510","messageId":"511","endLine":2,"endColumn":14},"lines-around-directive",["580"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["580"],[],[],[],[],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'mountObjectTrainingCompleted' and 'setupPlan'. Either include them or remove the dependency array.","ArrayExpression",["581"],["580"],[],[],[],[],["580"],[],[],[],[],["580"],[],[],[],[],["580"],[],[],[],[],"React Hook useCallback has missing dependencies: 'reset' and 'updateTrainings'. Either include them or remove the dependency array. If 'updateTrainings' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["582"],["580"],[],[],[],[],"React Hook useCallback has a missing dependency: 'updateStudents'. Either include it or remove the dependency array. If 'updateStudents' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["583"],["580"],[],[],[],[],["580"],[],[],[],[],["580"],[],[],[],[],["580"],[],[],[],[],"@typescript-eslint/no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar","React Hook useCallback has a missing dependency: 'refresh'. Either include it or remove the dependency array. You can also do a functional update 'setRefresh(r => ...)' if you only need 'refresh' in the 'setRefresh' call.",["584"],["585"],["580"],[],[],[],[],["580"],[],[],[],[],"'useCallback' is defined but never used.","'clientName' is defined but never used.",["580"],[],[],[],[],["580"],[],[],[],[],["580"],[],[],[],[],["580"],[],[],[],[],["580"],[],[],[],[],"'useEffect' is defined but never used.",["580"],[],[],[],[],"'nameExerciseRow' is assigned a value but never used.","'setNameExerciseRow' is assigned a value but never used.","'Exercise' is defined but never used.","React Hook useCallback has a missing dependency: 'trainingCompleted'. Either include it or remove the dependency array.",["586"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["587","588"],["580"],[],[],[],[],"'getDate' is defined but never used.",["589","590"],"React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.",["591"],"React Hook useCallback has a missing dependency: 'updateTrainings'. Either include it or remove the dependency array. If 'updateTrainings' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["592"],"'Drawer' is defined but never used.","padding-line-between-statements",{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"599","fix":"601"},{"desc":"602","fix":"603"},{"messageId":"604","fix":"605","desc":"606"},{"messageId":"607","fix":"608","desc":"609"},{"messageId":"604","fix":"610","desc":"606"},{"messageId":"607","fix":"611","desc":"609"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},"Update the dependencies array to be: [mountObjectTrainingCompleted, selectedExercises, setupPlan, tabPlanContext]",{"range":"616","text":"617"},"Update the dependencies array to be: [reset, updateTrainings]",{"range":"618","text":"619"},"Update the dependencies array to be: [updateStudents]",{"range":"620","text":"621"},"Update the dependencies array to be: [refresh]",{"range":"622","text":"623"},{"range":"624","text":"623"},"Update the dependencies array to be: [trainingCompleted]",{"range":"625","text":"626"},"suggestUnknown",{"range":"627","text":"628"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"627","text":"629"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"630","text":"628"},{"range":"630","text":"629"},"Update the dependencies array to be: [reset, training]",{"range":"631","text":"632"},"Update the dependencies array to be: [updateTrainings]",{"range":"633","text":"634"},[2636,2671],"[mountObjectTrainingCompleted, selectedExercises, setupPlan, tabPlanContext]",[1628,1630],"[reset, updateTrainings]",[1990,1992],"[updateStudents]",[2530,2532],"[refresh]",[2765,2767],[1679,1681],"[trainingCompleted]",[137,140],"unknown","never",[909,912],[1613,1623],"[reset, training]",[2403,2405],"[updateTrainings]"]