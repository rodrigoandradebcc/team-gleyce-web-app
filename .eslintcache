[{"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\App.tsx":"1","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\AuthContext.tsx":"2","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\index.tsx":"3","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\index.tsx":"4","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SpaceBetween\\index.tsx":"5","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Drawer\\styles.ts":"6","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\index.tsx":"7","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\styles.ts":"8","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\index.tsx":"9","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\index.tsx":"10","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\styles.ts":"11","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\index.tsx":"12","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\styles.ts":"13","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\Item\\index.tsx":"14","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\styles.ts":"15","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\index.tsx":"16","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownPlansActions\\index.tsx":"17","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\components\\SkeletonContainerGrid\\index.tsx":"18","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\TextPlaceholder\\index.tsx":"19","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SpaceBetween\\styles.ts":"20","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\styles.ts":"21","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\TrainingSetupContext.tsx":"22","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\Route.tsx":"23","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ConfirmationDeletePlanModal\\index.tsx":"24","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\ContainerSkeleton\\index.tsx":"25","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\styles.ts":"26","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Separator\\styles.ts":"27","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\styles\\global.ts":"28","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SkeletonPlaceholder\\index.tsx":"29","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\styles.ts":"30","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\index.tsx":"31","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsStudents\\styles.ts":"32","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\styles.ts":"33","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DrawerEditTraining\\styles.ts":"34","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\services\\api.ts":"35","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ModalExercise\\index.tsx":"36"},{"size":625,"mtime":1620704445416,"results":"37","hashOfConfig":"38"},{"size":2198,"mtime":1622951284415,"results":"39","hashOfConfig":"38"},{"size":7635,"mtime":1629241971760,"results":"40","hashOfConfig":"38"},{"size":6725,"mtime":1629427801439,"results":"41","hashOfConfig":"38"},{"size":275,"mtime":1623990940467,"results":"42","hashOfConfig":"38"},{"size":752,"mtime":1622433013466,"results":"43","hashOfConfig":"38"},{"size":3375,"mtime":1629414096815,"results":"44","hashOfConfig":"38"},{"size":2235,"mtime":1629414544330,"results":"45","hashOfConfig":"38"},{"size":6490,"mtime":1629259531850,"results":"46","hashOfConfig":"38"},{"size":877,"mtime":1629343177776,"results":"47","hashOfConfig":"38"},{"size":2210,"mtime":1622952035038,"results":"48","hashOfConfig":"38"},{"size":451,"mtime":1619980611085,"results":"49","hashOfConfig":"38"},{"size":975,"mtime":1623529258158,"results":"50","hashOfConfig":"38"},{"size":253,"mtime":1624116568323,"results":"51","hashOfConfig":"38"},{"size":593,"mtime":1619980611091,"results":"52","hashOfConfig":"38"},{"size":6329,"mtime":1622950788536,"results":"53","hashOfConfig":"38"},{"size":328,"mtime":1625341706043,"results":"54","hashOfConfig":"38"},{"size":3639,"mtime":1624155233316,"results":"55","hashOfConfig":"38"},{"size":397,"mtime":1624114482560,"results":"56","hashOfConfig":"38"},{"size":147,"mtime":1624150778774,"results":"57","hashOfConfig":"38"},{"size":2477,"mtime":1620012133830,"results":"58","hashOfConfig":"38"},{"size":2305,"mtime":1622987752730,"results":"59","hashOfConfig":"38"},{"size":785,"mtime":1620612736251,"results":"60","hashOfConfig":"38"},{"size":1225,"mtime":1626390075402,"results":"61","hashOfConfig":"38"},{"size":470,"mtime":1624150308766,"results":"62","hashOfConfig":"38"},{"size":608,"mtime":1621736827791,"results":"63","hashOfConfig":"38"},{"size":261,"mtime":1622340732492,"results":"64","hashOfConfig":"38"},{"size":3494,"mtime":1629241971761,"results":"65","hashOfConfig":"38"},{"size":432,"mtime":1624150467408,"results":"66","hashOfConfig":"38"},{"size":1612,"mtime":1625362668518,"results":"67","hashOfConfig":"38"},{"size":1845,"mtime":1620919178586,"results":"68","hashOfConfig":"38"},{"size":1533,"mtime":1623018329597,"results":"69","hashOfConfig":"38"},{"size":390,"mtime":1623210499938,"results":"70","hashOfConfig":"38"},{"size":747,"mtime":1623034688433,"results":"71","hashOfConfig":"38"},{"size":119,"mtime":1629425130793,"results":"72","hashOfConfig":"38"},{"size":4436,"mtime":1629424429614,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vmb0wv",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\App.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\AuthContext.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\index.tsx",["152","153"],"/* eslint-disable no-nested-ternary */\nimport { formatISO } from 'date-fns';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport { useHistory } from 'react-router';\nimport Button from '../../components/ButtonRod';\nimport CardStudent from '../../components/CardStudent';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\nimport ModalAddStudent from '../../components/ModalAddStudent';\nimport ModalConfirmationDeleteStudent from '../../components/ModalConfirmationDeleteStudent';\nimport SearchInput from '../../components/SearchInput';\nimport Tabs from '../../components/TabsStudents';\nimport { useDebounce } from '../../hooks/Debounce';\nimport api from '../../services/api';\nimport SkeletonContainerGrid from './components/SkeletonContainerGrid';\nimport {\n  ActionArea,\n  Container,\n  ContainerCardsStudents,\n  HeaderContent,\n  ListStudentEmpty,\n  Main,\n  Result,\n} from './styles';\n\ninterface StudentProps {\n  id: string;\n  full_name: string;\n  cpf: string;\n  date_of_birth: string;\n  active: boolean;\n  email: string;\n  phone: string;\n  password: string;\n  last_acess: string;\n  photo: string;\n  plan_type: string;\n  observation: string;\n}\n\n// const currentDate = JSON.stringify(new Date());\n\nconst Student: React.FC = () => {\n  const [users, setUsers] = useState<StudentProps[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState<StudentProps>(\n    {} as StudentProps,\n  );\n  const history = useHistory();\n\n  async function filterUsers(name?: string): Promise<void> {\n    setIsLoading(true);\n    updateStudents(String(name));\n    setIsLoading(false);\n  }\n\n  const handleResetUser = useCallback(() => {\n    setSelectedStudent({} as StudentProps);\n  }, []);\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalConfirmationOpen, setModalConfirmationOpen] = useState(false);\n\n  const studentType = [\n    { id: '1', description: 'Todos' },\n    { id: '2', description: 'Ativos' },\n    { id: '3', description: 'Inativos' },\n  ];\n\n  const [filterSelectedTypeStudent, setFilterSelectedTypeStudent] = useState(\n    studentType[0].description,\n  );\n  const updateStudents = useCallback(\n    async (name?: string) => {\n      if (filterSelectedTypeStudent === 'Todos') {\n        if (name === 'undefined') {\n          await api.get(`/users`).then(response => {\n            setUsers(response.data);\n          });\n        } else {\n          await api.get(`/users/filter-users?name=${name}`).then(response => {\n            setUsers(response.data);\n          });\n        }\n      } else if (filterSelectedTypeStudent === 'Ativos') {\n        if (name === 'undefined') {\n          await api.get(`/users/filter-users?active=true`).then(response => {\n            setUsers(response.data);\n          });\n        } else {\n          await api\n            .get(`/users/filter-users?name=${name}&active=true`)\n            .then(response => {\n              setUsers(response.data);\n            });\n        }\n      } else if (filterSelectedTypeStudent === 'Inativos') {\n        if (name === 'undefined') {\n          await api.get(`/users/filter-users?active=false`).then(response => {\n            setUsers(response.data);\n          });\n        } else {\n          await api\n            .get(`users/filter-users?name=${name}&active=false`)\n            .then(response => {\n              setUsers(response.data);\n            });\n        }\n      }\n    },\n    [filterSelectedTypeStudent],\n  );\n\n  function changeStudentTypes(content: string): void {\n    setFilterSelectedTypeStudent(content);\n  }\n\n  function clearUser(): void {\n    setSelectedStudent({\n      id: '',\n      full_name: '',\n      cpf: '',\n      date_of_birth: formatISO(new Date()),\n      active: false,\n      email: '',\n      phone: '',\n      password: '',\n      last_acess: '',\n      photo: '',\n      plan_type: '',\n      observation: '',\n    });\n  }\n\n  useEffect(() => {\n    filterUsers();\n  }, [filterSelectedTypeStudent]);\n\n  const { debounce } = useDebounce();\n\n  const handleToggleModalAddStudent = useCallback(() => {\n    clearUser();\n    setModalOpen(!modalOpen);\n  }, [modalOpen]);\n\n  const handleToggleModalConfirmation = useCallback(() => {\n    setModalConfirmationOpen(!modalConfirmationOpen);\n  }, [modalConfirmationOpen]);\n\n  const handleToggleActiveUser = useCallback(\n    async (id: string) => {\n      const findUser = users.find(student => student.id === id);\n\n      if (!findUser) {\n        return;\n      }\n      try {\n        await api.patch(`/users/change-active/${id}`, {\n          active: !findUser?.active,\n        });\n        setUsers(oldStudents =>\n          oldStudents.map(oldStudent =>\n            oldStudent.id === id\n              ? { ...oldStudent, active: !findUser.active }\n              : oldStudent,\n          ),\n        );\n        filterUsers();\n      } catch ({ err }) {\n        console.log(err);\n      }\n    },\n    [users],\n  );\n\n  return (\n    <>\n      <MenuBar />\n\n      <div id=\"mainContainer\">\n        <Header />\n        <Container>\n          <Button onClick={() => history.push('/dashboard')}>\n            <IoMdArrowRoundBack />\n          </Button>\n          <h2>Alunos</h2>\n          <Tabs\n            tabsApi={studentType}\n            setStudentTypeSelected={changeStudentTypes}\n          />\n\n          <ActionArea>\n            <SearchInput\n              placeholder=\"Pesquise por nome, sobrenome, e-mail ou CPF\"\n              name=\"search\"\n              onChange={event =>\n                debounce({\n                  internalFunction: filterUsers,\n                  event,\n                })\n              }\n            />\n            <Button onClick={() => handleToggleModalAddStudent()}>\n              CADASTRAR ALUNO\n            </Button>\n          </ActionArea>\n\n          <Main>\n            <HeaderContent>\n              <Result>{users.length} resultados</Result>\n            </HeaderContent>\n\n            {isLoading && <SkeletonContainerGrid />}\n\n            <ContainerCardsStudents>\n              {users.length && !isLoading && (\n                <>\n                  {users.map(user => (\n                    <CardStudent\n                      key={user.id}\n                      id={user.id}\n                      user={user}\n                      handleToggleActiveUser={() =>\n                        handleToggleActiveUser(user.id)\n                      }\n                      handleToggleDrawer={handleToggleModalAddStudent}\n                      handleToggleDeleteModal={handleToggleModalConfirmation}\n                      setSelectedStudent={setSelectedStudent}\n                    />\n                  ))}\n                </>\n              )}\n\n              {users.length === 0 && (\n                <ListStudentEmpty>\n                  Você não possui alunos cadastrados. Clique no botão\n                  &quot;Cadastrar Aluno&quot; para que eles sejam exibidos aqui!\n                </ListStudentEmpty>\n              )}\n            </ContainerCardsStudents>\n          </Main>\n\n          <ModalAddStudent\n            isOpen={modalOpen}\n            setIsOpen={handleToggleModalAddStudent}\n            updateStudents={updateStudents}\n            editUser={selectedStudent}\n            resetUser={handleResetUser}\n          />\n\n          <ModalConfirmationDeleteStudent\n            isOpen={modalConfirmationOpen}\n            setIsOpen={handleToggleModalConfirmation}\n            idUserSelected={selectedStudent.id}\n            updateUsers={updateStudents}\n          />\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Student;\n",["154","155","156","157","158"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\index.tsx",["159","160"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SpaceBetween\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Drawer\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\index.tsx",["161"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\styles.ts",[],["162","163","164","165","166"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\Item\\index.tsx",[],["167","168","169","170","171"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownPlansActions\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\components\\SkeletonContainerGrid\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\TextPlaceholder\\index.tsx",["172"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SpaceBetween\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\TrainingSetupContext.tsx",["173"],"import React, {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from 'react';\n\n// interface Exercise {\n//   name: string;\n//   exerciseId: string;\n//   prescription: Prescription;\n// }\n\ninterface Prescription {\n  prescriptionId: string;\n  repetition: string;\n  serie: string;\n  weight: string;\n  interval: string;\n  observation: string;\n}\n\ninterface TrainingContextCompletedProps {\n  planName: string;\n  exercises: ExercisesSelectedProps[];\n}\n\ninterface ExercisesSelectedProps {\n  value: string;\n  label: string;\n  prescription: Prescription;\n}\n\ninterface TrainingSetupContextProps {\n  trainingCompleted: TrainingContextCompletedProps[];\n  setupPlan: (training: TrainingContextCompletedProps) => void;\n  tabPlanContext: string;\n  changeTabPlanActive: (name: string) => void;\n}\n\ninterface TrainingSetupProviderProps {\n  children: ReactNode;\n}\n\nconst TrainingSetupContext = createContext<TrainingSetupContextProps>(\n  {} as TrainingSetupContextProps,\n);\n\nexport const TrainingSetupProvider: React.FC<TrainingSetupProviderProps> = ({\n  children,\n}) => {\n  // const trainingCompleted: TrainingsProps[] = [];\n  const [tabContextActive, setTabContextActive] = useState('');\n\n  function changeTabActive(name: string): void {\n    setTabContextActive(name);\n  }\n\n  // COMPLETO\n  const [trainingCompleted, setTrainingCompleted] = useState<\n    TrainingContextCompletedProps[]\n  >({} as TrainingContextCompletedProps[]);\n\n  const changeCompletedTraining = useCallback(plan => {\n    const newTrainingCompleted = {\n      ...trainingCompleted,\n      plan,\n    };\n    setTrainingCompleted(newTrainingCompleted);\n  }, []);\n\n  const setupPlan = useCallback(\n    plan => {\n      // changeCompletedTraining(plan);\n      changeCompletedTraining(plan);\n    },\n    [changeCompletedTraining],\n  );\n\n  return (\n    <TrainingSetupContext.Provider\n      value={{\n        trainingCompleted,\n        changeTabPlanActive: changeTabActive,\n        setupPlan,\n        tabPlanContext: tabContextActive,\n      }}\n    >\n      {children}\n    </TrainingSetupContext.Provider>\n  );\n};\n\nexport function useTrainingSetup(): TrainingSetupContextProps {\n  const context = useContext(TrainingSetupContext);\n\n  if (!context) {\n    throw new Error('use... must be used within an TrainingProvider');\n  }\n\n  return context;\n}\n",["174","175","176","177","178"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\Route.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ConfirmationDeletePlanModal\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\ContainerSkeleton\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Separator\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\styles\\global.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SkeletonPlaceholder\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsStudents\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DrawerEditTraining\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\services\\api.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ModalExercise\\index.tsx",[],{"ruleId":"179","severity":1,"message":"180","line":138,"column":6,"nodeType":"181","endLine":138,"endColumn":33,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"183","line":174,"column":5,"nodeType":"181","endLine":174,"endColumn":12,"suggestions":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":50,"column":11,"nodeType":"197","messageId":"198","endLine":50,"endColumn":40},{"ruleId":"179","severity":1,"message":"199","line":99,"column":6,"nodeType":"181","endLine":99,"endColumn":22,"suggestions":"200"},{"ruleId":"179","severity":1,"message":"201","line":101,"column":5,"nodeType":"181","endLine":101,"endColumn":7,"suggestions":"202"},{"ruleId":"185","replacedBy":"203"},{"ruleId":"187","replacedBy":"204"},{"ruleId":"189","replacedBy":"205"},{"ruleId":"191","replacedBy":"206"},{"ruleId":"193","replacedBy":"207"},{"ruleId":"185","replacedBy":"208"},{"ruleId":"187","replacedBy":"209"},{"ruleId":"189","replacedBy":"210"},{"ruleId":"191","replacedBy":"211"},{"ruleId":"193","replacedBy":"212"},{"ruleId":"195","severity":1,"message":"213","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"214","line":71,"column":6,"nodeType":"181","endLine":71,"endColumn":8,"suggestions":"215"},{"ruleId":"185","replacedBy":"216"},{"ruleId":"187","replacedBy":"217"},{"ruleId":"189","replacedBy":"218"},{"ruleId":"191","replacedBy":"219"},{"ruleId":"193","replacedBy":"220"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterUsers'. Either include it or remove the dependency array.","ArrayExpression",["221"],"React Hook useCallback has a missing dependency: 'filterUsers'. Either include it or remove the dependency array.",["222"],"lines-around-directive",["223"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'TrainingContextCompletedProps' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'listCompletedPlan'. Either include it or remove the dependency array.",["224"],"React Hook useCallback has a missing dependency: 'updateStudents'. Either include it or remove the dependency array. If 'updateStudents' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["225"],["223"],[],[],[],[],["223"],[],[],[],[],"'ReactNode' is defined but never used.","React Hook useCallback has a missing dependency: 'trainingCompleted'. Either include it or remove the dependency array.",["226"],["223"],[],[],[],[],{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"padding-line-between-statements",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [filterSelectedTypeStudent, filterUsers]",{"range":"237","text":"238"},"Update the dependencies array to be: [filterUsers, users]",{"range":"239","text":"240"},"Update the dependencies array to be: [listCompletedPlan, tabPlanContext]",{"range":"241","text":"242"},"Update the dependencies array to be: [updateStudents]",{"range":"243","text":"244"},"Update the dependencies array to be: [trainingCompleted]",{"range":"245","text":"246"},[4025,4052],"[filterSelectedTypeStudent, filterUsers]",[4981,4988],"[filterUsers, users]",[2503,2519],"[listCompletedPlan, tabPlanContext]",[2620,2622],"[updateStudents]",[1627,1629],"[trainingCompleted]"]