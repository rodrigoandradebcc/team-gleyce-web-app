[{"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\index.tsx":"1","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\styles.ts":"2","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\styles.ts":"3","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\styles.ts":"4","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\index.tsx":"5","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\App.tsx":"6","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\index.tsx":"7","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\styles.ts":"8","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Avatar\\styles.ts":"9","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\index.tsx":"10","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\index.tsx":"11","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\index.tsx":"12","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\styles.ts":"13","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Card\\styles.tsx":"14","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\styles.ts":"15","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\styles\\global.ts":"16","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\styles.ts":"17","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\index.tsx":"18","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\styles.ts":"19","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\index.tsx":"20","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\index.tsx":"21","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\index.tsx":"22","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\index.tsx":"23","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\styles.ts":"24","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\styles.ts":"25","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\index.tsx":"26","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\index.tsx":"27","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\index.tsx":"28","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\styles.ts":"29","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\styles.ts":"30","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\index.tsx":"31","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\index.tsx":"32","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsT\\index.tsx":"33","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\AuthContext.tsx":"34","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\styles.ts":"35","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\styles.ts":"36","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\index.tsx":"37","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\styles.ts":"38","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\styles.ts":"39","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\Route.tsx":"40","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\index.tsx":"41","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\styles.ts":"42","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\styles.ts":"43","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\index.tsx":"44","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalDeleteExercise\\index.tsx":"45","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\index.tsx":"46","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\styles.ts":"47","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\services\\api.ts":"48","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\components\\ExerciseRow\\index.tsx":"49","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\styles.ts":"50","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\InputTextArea\\styles.ts":"51"},{"size":3055,"mtime":1620611778222,"results":"52","hashOfConfig":"53"},{"size":3021,"mtime":1619980611103,"results":"54","hashOfConfig":"53"},{"size":434,"mtime":1619980611141,"results":"55","hashOfConfig":"53"},{"size":1383,"mtime":1620012300125,"results":"56","hashOfConfig":"53"},{"size":3460,"mtime":1620607547819,"results":"57","hashOfConfig":"53"},{"size":487,"mtime":1620615085591,"results":"58","hashOfConfig":"53"},{"size":4204,"mtime":1620607656098,"results":"59","hashOfConfig":"53"},{"size":1471,"mtime":1619980611153,"results":"60","hashOfConfig":"53"},{"size":918,"mtime":1620012133827,"results":"61","hashOfConfig":"53"},{"size":1282,"mtime":1619980611086,"results":"62","hashOfConfig":"53"},{"size":451,"mtime":1619980611085,"results":"63","hashOfConfig":"53"},{"size":2686,"mtime":1619980611103,"results":"64","hashOfConfig":"53"},{"size":210,"mtime":1619980611085,"results":"65","hashOfConfig":"53"},{"size":1365,"mtime":1619980611088,"results":"66","hashOfConfig":"53"},{"size":834,"mtime":1619980611098,"results":"67","hashOfConfig":"53"},{"size":1384,"mtime":1620615289820,"results":"68","hashOfConfig":"53"},{"size":2037,"mtime":1619980611148,"results":"69","hashOfConfig":"53"},{"size":5049,"mtime":1619980611102,"results":"70","hashOfConfig":"53"},{"size":1896,"mtime":1620012133832,"results":"71","hashOfConfig":"53"},{"size":2188,"mtime":1620619487344,"results":"72","hashOfConfig":"53"},{"size":2308,"mtime":1619980611098,"results":"73","hashOfConfig":"53"},{"size":837,"mtime":1620611061547,"results":"74","hashOfConfig":"53"},{"size":1845,"mtime":1620622283036,"results":"75","hashOfConfig":"53"},{"size":1434,"mtime":1620650105096,"results":"76","hashOfConfig":"53"},{"size":593,"mtime":1619980611091,"results":"77","hashOfConfig":"53"},{"size":2173,"mtime":1619980611138,"results":"78","hashOfConfig":"53"},{"size":5640,"mtime":1620608032900,"results":"79","hashOfConfig":"53"},{"size":1875,"mtime":1619980611101,"results":"80","hashOfConfig":"53"},{"size":3860,"mtime":1620012133828,"results":"81","hashOfConfig":"53"},{"size":795,"mtime":1620650270647,"results":"82","hashOfConfig":"53"},{"size":2684,"mtime":1620607336160,"results":"83","hashOfConfig":"53"},{"size":872,"mtime":1620622062684,"results":"84","hashOfConfig":"53"},{"size":891,"mtime":1619980611146,"results":"85","hashOfConfig":"53"},{"size":2206,"mtime":1620618119611,"results":"86","hashOfConfig":"53"},{"size":1553,"mtime":1619980611101,"results":"87","hashOfConfig":"53"},{"size":1098,"mtime":1620012133830,"results":"88","hashOfConfig":"53"},{"size":198,"mtime":1619980611146,"results":"89","hashOfConfig":"53"},{"size":631,"mtime":1619980611104,"results":"90","hashOfConfig":"53"},{"size":3264,"mtime":1619980611087,"results":"91","hashOfConfig":"53"},{"size":785,"mtime":1620612736251,"results":"92","hashOfConfig":"53"},{"size":671,"mtime":1619980611094,"results":"93","hashOfConfig":"53"},{"size":2477,"mtime":1620012133830,"results":"94","hashOfConfig":"53"},{"size":1032,"mtime":1620012133829,"results":"95","hashOfConfig":"53"},{"size":4597,"mtime":1620607444351,"results":"96","hashOfConfig":"53"},{"size":1245,"mtime":1619980611137,"results":"97","hashOfConfig":"53"},{"size":1934,"mtime":1619980611092,"results":"98","hashOfConfig":"53"},{"size":1523,"mtime":1619980611138,"results":"99","hashOfConfig":"53"},{"size":116,"mtime":1619980611157,"results":"100","hashOfConfig":"53"},{"size":1373,"mtime":1620619537991,"results":"101","hashOfConfig":"53"},{"size":2219,"mtime":1619980611150,"results":"102","hashOfConfig":"53"},{"size":322,"mtime":1619980611097,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mln35o",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"135"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\styles.ts",[],["217","218","219","220","221"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\styles.ts",[],["222","223","224","225","226"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\index.tsx",["227"],"import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Select, { OptionsType } from 'react-select';\nimport Button from '../../components/ButtonRod';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\nimport Tabs from '../../components/TabsT';\nimport api from '../../services/api';\nimport ExerciseRow from './components/ExerciseRow';\nimport * as S from './styles';\n\ninterface HistoryProps {\n  idSelected: string;\n}\n\nexport interface PlanProps {\n  id: string;\n  description: string;\n}\n\ninterface Exercises {\n  id: string;\n  name: string;\n  exercise_group: string;\n  link: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\ninterface OptionsProps {\n  value: any;\n  label: string;\n}\n\nconst Plans: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n  const [plans, setPlans] = useState<PlanProps[]>([] as PlanProps[]);\n  const [exercises, setExercises] = useState<Exercises[]>([]);\n  const [selectedExercises, setSelectedExercises] = useState<OptionsProps[]>(\n    [],\n  );\n\n  console.log(exercises);\n\n  const location = useLocation<HistoryProps>();\n\n  const options = getNameExercises(exercises);\n\n  // eslint-disable-next-line no-shadow\n  function getNameExercises(exercises: Exercises[]): OptionsProps[] {\n    const res = exercises.map(({ id, name }) => {\n      return { value: id, label: name };\n    });\n\n    return res;\n  }\n\n  const { idSelected } = location.state;\n\n  useEffect(() => {\n    api.get('/exercises').then(response => {\n      setExercises(response.data);\n    });\n  }, []);\n\n  const getPlansToUser = (id: string): void => {\n    api.get(`/plans/${id}`).then(response => {\n      setPlans(response.data);\n    });\n  };\n\n  function handleSetSelectedExercises(\n    exercisesSel: OptionsType<OptionsProps>,\n  ): void {\n    setSelectedExercises(exercisesSel as OptionsProps[]);\n  }\n\n  console.log(selectedExercises);\n\n  useEffect(() => {\n    getPlansToUser(idSelected);\n  }, [idSelected]);\n\n  return (\n    <>\n      <MenuBar />\n\n      <div id=\"mainContainer\">\n        <Header />\n        <S.Container>\n          <S.LabelAndButton>\n            <h1>Plan</h1>\n            <Button outlined outlinedColor=\"#FFBA01\" type=\"submit\">\n              SALVAR TREINO\n            </Button>\n          </S.LabelAndButton>\n\n          <Tabs tabsApi={plans} />\n          <S.SelectContainer>\n            <S.SelectAndButton>\n              <Select\n                options={options}\n                isMulti\n                onChange={(e: OptionsType<OptionsProps>) => {\n                  handleSetSelectedExercises(e);\n                }}\n              />\n            </S.SelectAndButton>\n            <Button background=\"#FFBA01\">CADASTRAR EXERCÍCIO</Button>\n          </S.SelectContainer>\n\n          <table>\n            <thead>\n              <tr>\n                <th>Nome</th>\n                <th>Séries</th>\n                <th>Repetições</th>\n                <th>Carga</th>\n                <th>Intervalo</th>\n                <th>Observação</th>\n                <th>Excluir</th>\n              </tr>\n            </thead>\n            <tbody>\n              {selectedExercises &&\n                selectedExercises.map(({ label, value }) => (\n                  <ExerciseRow key={value}>{label}</ExerciseRow>\n                ))}\n            </tbody>\n          </table>\n        </S.Container>\n      </div>\n    </>\n  );\n};\n\nexport default Plans;\n","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\App.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\index.tsx",["228"],"import { format, parseISO } from 'date-fns';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { IoMdCalendar } from 'react-icons/io';\nimport { MdModeEdit } from 'react-icons/md';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Avatar from '../../components/Avatar';\nimport ButtonIcon from '../../components/ButtonIcon';\nimport ButtonRod from '../../components/ButtonRod';\nimport DropdownMenu from '../../components/DropdownMenu';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\nimport ModalAddTraining from '../../components/ModalAddTraining';\nimport Tabs from '../../components/TabsT';\nimport api from '../../services/api';\nimport * as S from './styles';\n\ninterface HistoryProps {\n  idSelected: string;\n  studentName: string;\n}\n\ninterface TrainingProps {\n  id: string;\n  name: string;\n  observation: string;\n  note: string;\n  expiration_date: string;\n}\n\nconst Training: React.FC = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const handleToggleModalAddTraining = useCallback(() => {\n    setModalOpen(!modalOpen);\n  }, [modalOpen]);\n\n  const trainingTypes = [\n    { id: '1', description: 'Todos' },\n    { id: '2', description: 'Ativos' },\n    { id: '3', description: 'Inativos' },\n  ];\n\n  const location = useLocation<HistoryProps>();\n\n  const { idSelected, studentName } = location.state;\n\n  const [trainings, setTrainings] = useState<TrainingProps[]>();\n\n  const history = useHistory();\n\n  const [idAtualSelecionado, setIdAtualSelecionado] = useState('');\n\n  useEffect(() => {\n    console.log('O SELECIONADO', idSelected);\n    setIdAtualSelecionado(idSelected);\n  }, [idSelected]);\n\n  const getTrainings = (id: string): void => {\n    api.get(`/trainings/${id}`).then(response => {\n      setTrainings(response.data);\n    });\n  };\n\n  async function handleUpdateSelectedTraining(id: string): Promise<void> {\n    setIdAtualSelecionado(id);\n  }\n\n  useEffect(() => {\n    getTrainings(idSelected);\n  }, [idSelected]);\n\n  return (\n    <>\n      <MenuBar />\n      <div id=\"mainContainer\">\n        <Header />\n        <S.Container>\n          <S.NameAndLogoContainer>\n            <p>{studentName}</p>\n\n            <Avatar src=\"\" userName={studentName} size={2} />\n          </S.NameAndLogoContainer>\n\n          <Tabs tabsApi={trainingTypes} />\n\n          <S.ButtonArea>\n            <ButtonRod\n              background=\"#FCA311\"\n              onClick={() => {\n                handleToggleModalAddTraining();\n              }}\n            >\n              CADASTRAR TREINO\n            </ButtonRod>\n          </S.ButtonArea>\n\n          <S.ContainerCards>\n            {trainings?.map(({ name, expiration_date, observation, id }) => (\n              <S.TrainingCard key={id}>\n                <S.NameAndExpirationDate>\n                  <strong>{name}</strong>\n                  <div>\n                    <IoMdCalendar size={16} />\n                    <p>\n                      Venc: {format(parseISO(expiration_date), 'dd/MM/yyyy')}\n                    </p>\n                  </div>\n                </S.NameAndExpirationDate>\n\n                <S.ButtonActionsContainer>\n                  <ButtonIcon\n                    onClick={() => {\n                      history.push('/plans', {\n                        idSelected: id,\n                      });\n                    }}\n                  >\n                    <MdModeEdit size={16} />\n                    EDITAR EXERCÍCIOS\n                  </ButtonIcon>\n                  <DropdownMenu\n                    id={id}\n                    handleUpdateSelectedTrainning={handleUpdateSelectedTraining}\n                    idActualSelectedTeste={idAtualSelecionado}\n                  />\n                </S.ButtonActionsContainer>\n              </S.TrainingCard>\n            ))}\n          </S.ContainerCards>\n          {/* <strong>TREINOS ATIVOS ({trainings?.length})</strong> */}\n\n          {/* <S.InactiveTraininigs>TREINOS INATIVOS (0)</S.InactiveTraininigs> */}\n          <ModalAddTraining\n            isOpen={modalOpen}\n            setIsOpen={handleToggleModalAddTraining}\n          />\n        </S.Container>\n      </div>\n    </>\n  );\n};\n\nexport default Training;\n","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Avatar\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\index.tsx",[],["229","230","231","232","233"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\styles.ts",[],["234","235","236","237","238"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Card\\styles.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\styles\\global.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\styles.ts",[],["239","240","241","242","243"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\index.tsx",["244","245","246"],"import React, { useCallback, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FiCheckSquare } from 'react-icons/fi';\nimport api from '../../services/api';\nimport { InputTextArea } from '../InputTextArea';\nimport Modal from '../Modal';\nimport { NewInput } from '../NewInput';\nimport { NewSelect } from '../NewSelect';\nimport { Form, Label, Switch } from './styles';\n\ninterface StudentProps {\n  full_name: string;\n  cpf: string;\n  date_of_birth: string;\n  active: boolean;\n  email: string;\n  phone: string;\n  password: string;\n  last_acess: string;\n  photo: string;\n  plan_type: string;\n  observation: string;\n}\n\ntype FormProps = StudentProps & { password_confirmation: string };\n\ninterface IModalProps {\n  isOpen: boolean;\n  setIsOpen: () => void;\n  // handleAddStudent: (student: StudentProps) => Promise<void>;\n}\n\nconst ModalAddStudent: React.FC<IModalProps> = ({\n  isOpen = false,\n  setIsOpen,\n  // handleAddStudent,\n}) => {\n  const { register, handleSubmit } = useForm();\n\n  const [isActive, setIsActive] = useState(false);\n  const [observation, setObservation] = useState('');\n\n  function handle(data: StudentProps): void {\n    const currentDate = String(new Date(Date.now()));\n    console.log('data de hoje', currentDate);\n\n    const newData = { ...data, last_acess: currentDate };\n\n    handleStudentSubmit(newData);\n    setIsOpen();\n  }\n\n  const plans = [\n    { label: 'Quinzenal', value: 'Quinzenal' },\n    { label: 'Semestral', value: 'Semestral' },\n    { label: 'Personal', value: 'Personal' },\n  ];\n\n  const handleStudentSubmit = useCallback(\n    async (student: StudentProps): Promise<void> => {\n      try {\n        const response = await api.post('/users', student);\n\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [],\n  );\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      <Form onSubmit={handleSubmit(handle)}>\n        <h1>Novo aluno</h1>\n\n        <div className=\"two-inputs\">\n          <div>\n            <Label>Nome do aluno</Label>\n            <NewInput\n              placeholder=\"Ex: Fulano de tal\"\n              required\n              {...register('full_name')}\n            />\n          </div>\n          <div>\n            <Label>Tipo de plano</Label>\n            {/* <select {...register('plan_type')}>\n              <option value=\"Quinzenal\">Quinzenal</option>\n              <option value=\"Semestral\">Semestral</option>\n              <option value=\"Personal\">Personal</option>\n            </select> */}\n            <NewSelect values={plans} {...register('plan_type')} />\n          </div>\n        </div>\n\n        <div className=\"two-inputs\">\n          <div>\n            <Label>CPF</Label>\n            <NewInput\n              type=\"text\"\n              placeholder=\"00011122233\"\n              required\n              {...register('cpf')}\n            />\n          </div>\n          <div>\n            <Label>Data de nascimento</Label>\n            <NewInput\n              type=\"date\"\n              placeholder=\"01/12/2000\"\n              required\n              {...register('date_of_birth')}\n            />\n          </div>\n        </div>\n\n        <div className=\"two-inputs\">\n          <div>\n            <Label>Contato</Label>\n            <NewInput\n              type=\"tel\"\n              placeholder=\"(88) 9 1122-3344\"\n              required\n              {...register('phone')}\n            />\n          </div>\n          <div>\n            <Label>Email</Label>\n            <NewInput\n              type=\"email\"\n              placeholder=\"fulano@tal.com\"\n              required\n              {...register('email')}\n            />\n          </div>\n        </div>\n\n        <div className=\"two-inputs\">\n          <div>\n            <Label>Senha</Label>\n\n            <NewInput type=\"password\" required {...register('password')} />\n          </div>\n          <div>\n            <Label>Confirmação de senha</Label>\n            <NewInput name=\"password_confirmation\" type=\"password\" required />\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <Label>Aluno ativo?</Label>\n            <Switch onClick={() => setIsActive(!isActive)}>\n              <input\n                type=\"checkbox\"\n                checked={isActive}\n                // onChange={() => console.log(!isActive)}\n                {...register('active')}\n              />\n              <span className=\"slider round\" />\n            </Switch>\n          </div>\n        </div>\n\n        <div>\n          <div>\n            <Label>Observações?</Label>\n            <InputTextArea\n              // value={observation}\n              {...register('observation')}\n\n              // onChange={e => setObservation(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <button type=\"submit\" data-testid=\"add-student-button\">\n          <p className=\"text\">Adicionar aluno</p>\n          <div className=\"icon\">\n            <FiCheckSquare size={24} />\n          </div>\n        </button>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ModalAddStudent;\n",["247","248","249","250","251"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\index.tsx",[],["252","253","254","255","256"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\index.tsx",["257"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\index.tsx",["258","259"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\index.tsx",["260"],"import React from 'react';\nimport { FiCalendar } from 'react-icons/fi';\nimport Card from '../../components/Card';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\n\nimport {\n  Container,\n  CardList,\n  ClassesList,\n  ClassesTitle,\n  ClassesContainer,\n  Class,\n} from './styles';\n\nexport interface PropsPersonalClass {\n  clientName?: string;\n  scheduled?: string;\n  date?: string;\n}\n\nconst Dashboard: React.FC<PropsPersonalClass> = ({ clientName }) => {\n  return (\n    <>\n      <MenuBar />\n\n      <div id=\"mainContainer\">\n        <Header />\n        <Container>\n          <h1>Dashboard</h1>\n          <CardList>\n            <Card\n              numberColor=\"#0096D1\"\n              cardName=\"Vencimentos de hoje\"\n              quantity={5}\n            />\n            <Card\n              numberColor=\"#F44336\"\n              cardName=\"Aulas agendadas pra hoje\"\n              quantity={3}\n            />\n            <Card numberColor=\"#FAC600\" cardName=\"Alunos Ativos\" quantity={2} />\n            <Card\n              numberColor=\"#4CAF50\"\n              cardName=\"Aniversáriantes\"\n              quantity={1}\n            />\n          </CardList>\n          <ClassesList>\n            <ClassesContainer>\n              <ClassesTitle color=\"#e2445c\">\n                <h3>Aulas de Hoje</h3>\n                <FiCalendar />\n              </ClassesTitle>\n              <Class>\n                <h4>\n                  Fulano de Tal <span>09:00</span>\n                </h4>\n                <p>\n                  Personal Trainer <span>10:00</span>\n                </p>\n              </Class>\n              <Class>\n                <h4>\n                  Fulano de Tal <span>09:00</span>\n                </h4>\n                <p>\n                  Personal Trainer <span>10:00</span>\n                </p>\n              </Class>\n            </ClassesContainer>\n            <ClassesContainer>\n              <ClassesTitle color=\"#FAC600\">\n                <h3>Treinos com vencimentos mais próximos</h3>\n                <FiCalendar />\n              </ClassesTitle>\n              <Class>\n                <h4>\n                  Fulano de Tal <span>09:00</span>\n                </h4>\n                <p>\n                  Personal Trainer <span>10:00</span>\n                </p>\n              </Class>\n              <Class>\n                <h4>\n                  Fulano de Tal <span>09:00</span>\n                </h4>\n                <p>\n                  Personal Trainer <span>10:00</span>\n                </p>\n              </Class>\n            </ClassesContainer>\n          </ClassesList>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsT\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\AuthContext.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\Route.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\index.tsx",["261"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalDeleteExercise\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\index.tsx",["262","263"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\services\\api.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\components\\ExerciseRow\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\InputTextArea\\styles.ts",[],{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","replacedBy":"273"},{"ruleId":"264","replacedBy":"274"},{"ruleId":"266","replacedBy":"275"},{"ruleId":"268","replacedBy":"276"},{"ruleId":"270","replacedBy":"277"},{"ruleId":"272","replacedBy":"278"},{"ruleId":"279","severity":1,"message":"280","line":31,"column":10,"nodeType":"281","messageId":"282","endLine":31,"endColumn":13,"suggestions":"283"},{"ruleId":"284","severity":1,"message":"285","line":98,"column":55,"nodeType":"286","messageId":"287","endLine":98,"endColumn":66},{"ruleId":"264","replacedBy":"288"},{"ruleId":"266","replacedBy":"289"},{"ruleId":"268","replacedBy":"290"},{"ruleId":"270","replacedBy":"291"},{"ruleId":"272","replacedBy":"292"},{"ruleId":"264","replacedBy":"293"},{"ruleId":"266","replacedBy":"294"},{"ruleId":"268","replacedBy":"295"},{"ruleId":"270","replacedBy":"296"},{"ruleId":"272","replacedBy":"297"},{"ruleId":"264","replacedBy":"298"},{"ruleId":"266","replacedBy":"299"},{"ruleId":"268","replacedBy":"300"},{"ruleId":"270","replacedBy":"301"},{"ruleId":"272","replacedBy":"302"},{"ruleId":"284","severity":1,"message":"303","line":25,"column":6,"nodeType":"286","messageId":"287","endLine":25,"endColumn":15},{"ruleId":"284","severity":1,"message":"304","line":41,"column":10,"nodeType":"286","messageId":"287","endLine":41,"endColumn":21},{"ruleId":"284","severity":1,"message":"305","line":41,"column":23,"nodeType":"286","messageId":"287","endLine":41,"endColumn":37},{"ruleId":"264","replacedBy":"306"},{"ruleId":"266","replacedBy":"307"},{"ruleId":"268","replacedBy":"308"},{"ruleId":"270","replacedBy":"309"},{"ruleId":"272","replacedBy":"310"},{"ruleId":"264","replacedBy":"311"},{"ruleId":"266","replacedBy":"312"},{"ruleId":"268","replacedBy":"313"},{"ruleId":"270","replacedBy":"314"},{"ruleId":"272","replacedBy":"315"},{"ruleId":"284","severity":1,"message":"316","line":3,"column":16,"nodeType":"286","messageId":"287","endLine":3,"endColumn":20},{"ruleId":"317","severity":1,"message":"318","line":101,"column":6,"nodeType":"319","endLine":101,"endColumn":8,"suggestions":"320"},{"ruleId":"317","severity":1,"message":"318","line":111,"column":6,"nodeType":"319","endLine":111,"endColumn":8,"suggestions":"321"},{"ruleId":"284","severity":1,"message":"322","line":22,"column":52,"nodeType":"286","messageId":"287","endLine":22,"endColumn":62},{"ruleId":"284","severity":1,"message":"323","line":82,"column":9,"nodeType":"286","messageId":"287","endLine":82,"endColumn":25},{"ruleId":"284","severity":1,"message":"324","line":18,"column":10,"nodeType":"286","messageId":"287","endLine":18,"endColumn":25},{"ruleId":"284","severity":1,"message":"325","line":18,"column":27,"nodeType":"286","messageId":"287","endLine":18,"endColumn":45},"lines-around-directive",["326"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["326"],[],[],[],[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["327","328"],"@typescript-eslint/no-unused-vars","'observation' is defined but never used.","Identifier","unusedVar",["326"],[],[],[],[],["326"],[],[],[],[],["326"],[],[],[],[],"'FormProps' is defined but never used.","'observation' is assigned a value but never used.","'setObservation' is assigned a value but never used.",["326"],[],[],[],[],["326"],[],[],[],[],"'uuid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'refresh'. Either include it or remove the dependency array. You can also do a functional update 'setRefresh(r => ...)' if you only need 'refresh' in the 'setRefresh' call.","ArrayExpression",["329"],["330"],"'clientName' is defined but never used.","'handleAddStudent' is assigned a value but never used.","'isActualVisible' is assigned a value but never used.","'isSetActualVisible' is assigned a value but never used.","padding-line-between-statements",{"messageId":"331","fix":"332","desc":"333"},{"messageId":"334","fix":"335","desc":"336"},{"desc":"337","fix":"338"},{"desc":"337","fix":"339"},"suggestUnknown",{"range":"340","text":"341"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"340","text":"342"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","Update the dependencies array to be: [refresh]",{"range":"343","text":"344"},{"range":"345","text":"344"},[748,751],"unknown","never",[2530,2532],"[refresh]",[2765,2767]]