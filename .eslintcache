[{"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\App.tsx":"1","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\AuthContext.tsx":"2","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\index.tsx":"3","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\index.tsx":"4","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SpaceBetween\\index.tsx":"5","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Drawer\\styles.ts":"6","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\index.tsx":"7","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\styles.ts":"8","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\index.tsx":"9","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\index.tsx":"10","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\styles.ts":"11","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\index.tsx":"12","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\styles.ts":"13","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\Item\\index.tsx":"14","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\styles.ts":"15","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\index.tsx":"16","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownPlansActions\\index.tsx":"17","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\components\\SkeletonContainerGrid\\index.tsx":"18","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\TextPlaceholder\\index.tsx":"19","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SpaceBetween\\styles.ts":"20","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\styles.ts":"21","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\TrainingSetupContext.tsx":"22","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\Route.tsx":"23","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ConfirmationDeletePlanModal\\index.tsx":"24","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\ContainerSkeleton\\index.tsx":"25","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Separator\\styles.ts":"26","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\styles\\global.ts":"27","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SkeletonPlaceholder\\index.tsx":"28","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\styles.ts":"29","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\index.tsx":"30","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsStudents\\styles.ts":"31","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\styles.ts":"32","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DrawerEditTraining\\styles.ts":"33","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\services\\api.ts":"34","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ModalExercise\\index.tsx":"35","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\styles.ts":"36","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\index.tsx":"37","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ModalExercise\\styles.ts":"38","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\styles.ts":"39","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\styles.ts":"40","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SkeletonPlaceholder\\styles.ts":"41","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DrawerEditTraining\\index.tsx":"42","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddPlan\\index.tsx":"43","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsStudents\\index.tsx":"44","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\index.tsx":"45","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\Item\\styles.ts":"46","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ConfirmationDeletePlanModal\\styles.ts":"47","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\index.tsx":"48","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ModalAddTraining\\index.tsx":"49"},{"size":625,"mtime":1620704445416,"results":"50","hashOfConfig":"51"},{"size":2198,"mtime":1622951284415,"results":"52","hashOfConfig":"51"},{"size":7635,"mtime":1629241971760,"results":"53","hashOfConfig":"51"},{"size":6725,"mtime":1629427801439,"results":"54","hashOfConfig":"51"},{"size":275,"mtime":1623990940467,"results":"55","hashOfConfig":"51"},{"size":752,"mtime":1622433013466,"results":"56","hashOfConfig":"51"},{"size":3379,"mtime":1629429025427,"results":"57","hashOfConfig":"51"},{"size":2235,"mtime":1629414544330,"results":"58","hashOfConfig":"51"},{"size":6490,"mtime":1629259531850,"results":"59","hashOfConfig":"51"},{"size":877,"mtime":1629343177776,"results":"60","hashOfConfig":"51"},{"size":2210,"mtime":1622952035038,"results":"61","hashOfConfig":"51"},{"size":451,"mtime":1619980611085,"results":"62","hashOfConfig":"51"},{"size":975,"mtime":1623529258158,"results":"63","hashOfConfig":"51"},{"size":253,"mtime":1624116568323,"results":"64","hashOfConfig":"51"},{"size":593,"mtime":1619980611091,"results":"65","hashOfConfig":"51"},{"size":6361,"mtime":1629682706320,"results":"66","hashOfConfig":"51"},{"size":328,"mtime":1625341706043,"results":"67","hashOfConfig":"51"},{"size":3639,"mtime":1624155233316,"results":"68","hashOfConfig":"51"},{"size":381,"mtime":1629679922780,"results":"69","hashOfConfig":"51"},{"size":147,"mtime":1624150778774,"results":"70","hashOfConfig":"51"},{"size":2477,"mtime":1620012133830,"results":"71","hashOfConfig":"51"},{"size":2305,"mtime":1622987752730,"results":"72","hashOfConfig":"51"},{"size":785,"mtime":1620612736251,"results":"73","hashOfConfig":"51"},{"size":1225,"mtime":1626390075402,"results":"74","hashOfConfig":"51"},{"size":470,"mtime":1624150308766,"results":"75","hashOfConfig":"51"},{"size":261,"mtime":1622340732492,"results":"76","hashOfConfig":"51"},{"size":3494,"mtime":1629241971761,"results":"77","hashOfConfig":"51"},{"size":432,"mtime":1624150467408,"results":"78","hashOfConfig":"51"},{"size":1612,"mtime":1625362668518,"results":"79","hashOfConfig":"51"},{"size":1845,"mtime":1620919178586,"results":"80","hashOfConfig":"51"},{"size":1533,"mtime":1623018329597,"results":"81","hashOfConfig":"51"},{"size":390,"mtime":1623210499938,"results":"82","hashOfConfig":"51"},{"size":747,"mtime":1623034688433,"results":"83","hashOfConfig":"51"},{"size":119,"mtime":1629425130793,"results":"84","hashOfConfig":"51"},{"size":4436,"mtime":1629424429614,"results":"85","hashOfConfig":"51"},{"size":2037,"mtime":1619980611148,"results":"86","hashOfConfig":"51"},{"size":1224,"mtime":1626390242839,"results":"87","hashOfConfig":"51"},{"size":608,"mtime":1629241971739,"results":"88","hashOfConfig":"51"},{"size":4140,"mtime":1624150774014,"results":"89","hashOfConfig":"51"},{"size":4434,"mtime":1623807921493,"results":"90","hashOfConfig":"51"},{"size":938,"mtime":1624150721470,"results":"91","hashOfConfig":"51"},{"size":4281,"mtime":1629681284590,"results":"92","hashOfConfig":"51"},{"size":6620,"mtime":1629679960513,"results":"93","hashOfConfig":"51"},{"size":1267,"mtime":1629679914085,"results":"94","hashOfConfig":"51"},{"size":198,"mtime":1619980611146,"results":"95","hashOfConfig":"51"},{"size":185,"mtime":1624148850662,"results":"96","hashOfConfig":"51"},{"size":879,"mtime":1626237904205,"results":"97","hashOfConfig":"51"},{"size":2381,"mtime":1629681743425,"results":"98","hashOfConfig":"51"},{"size":3438,"mtime":1629682700521,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vmb0wv",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\App.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\AuthContext.tsx",[],["209","210","211","212","213"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\index.tsx",["214","215"],"/* eslint-disable no-nested-ternary */\nimport { formatISO } from 'date-fns';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { IoMdArrowRoundBack } from 'react-icons/io';\nimport { useHistory } from 'react-router';\nimport Button from '../../components/ButtonRod';\nimport CardStudent from '../../components/CardStudent';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\nimport ModalAddStudent from '../../components/ModalAddStudent';\nimport ModalConfirmationDeleteStudent from '../../components/ModalConfirmationDeleteStudent';\nimport SearchInput from '../../components/SearchInput';\nimport Tabs from '../../components/TabsStudents';\nimport { useDebounce } from '../../hooks/Debounce';\nimport api from '../../services/api';\nimport SkeletonContainerGrid from './components/SkeletonContainerGrid';\nimport {\n  ActionArea,\n  Container,\n  ContainerCardsStudents,\n  HeaderContent,\n  ListStudentEmpty,\n  Main,\n  Result,\n} from './styles';\n\ninterface StudentProps {\n  id: string;\n  full_name: string;\n  cpf: string;\n  date_of_birth: string;\n  active: boolean;\n  email: string;\n  phone: string;\n  password: string;\n  last_acess: string;\n  photo: string;\n  plan_type: string;\n  observation: string;\n}\n\n// const currentDate = JSON.stringify(new Date());\n\nconst Student: React.FC = () => {\n  const [users, setUsers] = useState<StudentProps[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState<StudentProps>(\n    {} as StudentProps,\n  );\n  const history = useHistory();\n\n  async function filterUsers(name?: string): Promise<void> {\n    setIsLoading(true);\n    updateStudents(String(name));\n    setIsLoading(false);\n  }\n\n  const handleResetUser = useCallback(() => {\n    setSelectedStudent({} as StudentProps);\n  }, []);\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalConfirmationOpen, setModalConfirmationOpen] = useState(false);\n\n  const studentType = [\n    { id: '1', description: 'Todos' },\n    { id: '2', description: 'Ativos' },\n    { id: '3', description: 'Inativos' },\n  ];\n\n  const [filterSelectedTypeStudent, setFilterSelectedTypeStudent] = useState(\n    studentType[0].description,\n  );\n  const updateStudents = useCallback(\n    async (name?: string) => {\n      if (filterSelectedTypeStudent === 'Todos') {\n        if (name === 'undefined') {\n          await api.get(`/users`).then(response => {\n            setUsers(response.data);\n          });\n        } else {\n          await api.get(`/users/filter-users?name=${name}`).then(response => {\n            setUsers(response.data);\n          });\n        }\n      } else if (filterSelectedTypeStudent === 'Ativos') {\n        if (name === 'undefined') {\n          await api.get(`/users/filter-users?active=true`).then(response => {\n            setUsers(response.data);\n          });\n        } else {\n          await api\n            .get(`/users/filter-users?name=${name}&active=true`)\n            .then(response => {\n              setUsers(response.data);\n            });\n        }\n      } else if (filterSelectedTypeStudent === 'Inativos') {\n        if (name === 'undefined') {\n          await api.get(`/users/filter-users?active=false`).then(response => {\n            setUsers(response.data);\n          });\n        } else {\n          await api\n            .get(`users/filter-users?name=${name}&active=false`)\n            .then(response => {\n              setUsers(response.data);\n            });\n        }\n      }\n    },\n    [filterSelectedTypeStudent],\n  );\n\n  function changeStudentTypes(content: string): void {\n    setFilterSelectedTypeStudent(content);\n  }\n\n  function clearUser(): void {\n    setSelectedStudent({\n      id: '',\n      full_name: '',\n      cpf: '',\n      date_of_birth: formatISO(new Date()),\n      active: false,\n      email: '',\n      phone: '',\n      password: '',\n      last_acess: '',\n      photo: '',\n      plan_type: '',\n      observation: '',\n    });\n  }\n\n  useEffect(() => {\n    filterUsers();\n  }, [filterSelectedTypeStudent]);\n\n  const { debounce } = useDebounce();\n\n  const handleToggleModalAddStudent = useCallback(() => {\n    clearUser();\n    setModalOpen(!modalOpen);\n  }, [modalOpen]);\n\n  const handleToggleModalConfirmation = useCallback(() => {\n    setModalConfirmationOpen(!modalConfirmationOpen);\n  }, [modalConfirmationOpen]);\n\n  const handleToggleActiveUser = useCallback(\n    async (id: string) => {\n      const findUser = users.find(student => student.id === id);\n\n      if (!findUser) {\n        return;\n      }\n      try {\n        await api.patch(`/users/change-active/${id}`, {\n          active: !findUser?.active,\n        });\n        setUsers(oldStudents =>\n          oldStudents.map(oldStudent =>\n            oldStudent.id === id\n              ? { ...oldStudent, active: !findUser.active }\n              : oldStudent,\n          ),\n        );\n        filterUsers();\n      } catch ({ err }) {\n        console.log(err);\n      }\n    },\n    [users],\n  );\n\n  return (\n    <>\n      <MenuBar />\n\n      <div id=\"mainContainer\">\n        <Header />\n        <Container>\n          <Button onClick={() => history.push('/dashboard')}>\n            <IoMdArrowRoundBack />\n          </Button>\n          <h2>Alunos</h2>\n          <Tabs\n            tabsApi={studentType}\n            setStudentTypeSelected={changeStudentTypes}\n          />\n\n          <ActionArea>\n            <SearchInput\n              placeholder=\"Pesquise por nome, sobrenome, e-mail ou CPF\"\n              name=\"search\"\n              onChange={event =>\n                debounce({\n                  internalFunction: filterUsers,\n                  event,\n                })\n              }\n            />\n            <Button onClick={() => handleToggleModalAddStudent()}>\n              CADASTRAR ALUNO\n            </Button>\n          </ActionArea>\n\n          <Main>\n            <HeaderContent>\n              <Result>{users.length} resultados</Result>\n            </HeaderContent>\n\n            {isLoading && <SkeletonContainerGrid />}\n\n            <ContainerCardsStudents>\n              {users.length && !isLoading && (\n                <>\n                  {users.map(user => (\n                    <CardStudent\n                      key={user.id}\n                      id={user.id}\n                      user={user}\n                      handleToggleActiveUser={() =>\n                        handleToggleActiveUser(user.id)\n                      }\n                      handleToggleDrawer={handleToggleModalAddStudent}\n                      handleToggleDeleteModal={handleToggleModalConfirmation}\n                      setSelectedStudent={setSelectedStudent}\n                    />\n                  ))}\n                </>\n              )}\n\n              {users.length === 0 && (\n                <ListStudentEmpty>\n                  Você não possui alunos cadastrados. Clique no botão\n                  &quot;Cadastrar Aluno&quot; para que eles sejam exibidos aqui!\n                </ListStudentEmpty>\n              )}\n            </ContainerCardsStudents>\n          </Main>\n\n          <ModalAddStudent\n            isOpen={modalOpen}\n            setIsOpen={handleToggleModalAddStudent}\n            updateStudents={updateStudents}\n            editUser={selectedStudent}\n            resetUser={handleResetUser}\n          />\n\n          <ModalConfirmationDeleteStudent\n            isOpen={modalConfirmationOpen}\n            setIsOpen={handleToggleModalConfirmation}\n            idUserSelected={selectedStudent.id}\n            updateUsers={updateStudents}\n          />\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Student;\n",["216","217","218","219","220"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\index.tsx",["221","222"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Select, { OptionsType } from 'react-select';\nimport { toast } from 'react-toastify';\nimport Button from '../../components/ButtonRod';\nimport { DropdownPlansActions } from '../../components/DropdownPlansActions';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\nimport ModalAddPlan from '../../components/ModalAddPlan';\nimport Tabs from '../../components/TabsPlans';\nimport { useTrainingSetup } from '../../hooks/TrainingSetupContext';\nimport api from '../../services/api';\nimport Exercises from '../Exercises';\nimport ExerciseRow from './components/ExerciseRow';\nimport * as S from './styles';\n\ninterface HistoryProps {\n  idSelected: string;\n}\n\nexport interface PlanProps {\n  id: string;\n  description: string;\n}\n\ninterface Exercises {\n  id: string;\n  name: string;\n  exercise_group: string;\n  link: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\ninterface ExercisesSelectedProps {\n  value: string;\n  label: string;\n  prescription?: Prescription;\n}\n\ninterface Prescription {\n  prescriptionId: string;\n  repetition: string;\n  serie: string;\n  weight: string;\n  interval: string;\n  observation: string;\n}\n\ninterface TrainingContextCompletedProps {\n  planName: string;\n  exercises: ExercisesSelectedContextProps[];\n}\n\ninterface ExercisesSelectedContextProps {\n  value: string;\n  label: string;\n  prescription: Prescription;\n}\n\ninterface Prescription {\n  id: string;\n  repetition: string;\n  serie: string;\n  weight: string;\n  interval: string;\n  observation: string;\n}\n\ninterface ExerciseAndPrescriptionToPlanProps {\n  id: string;\n  planName: string;\n  exercise_id: string;\n  prescription_id: string;\n  prescription: Prescription;\n  exercise: Exercises;\n}\n\nconst Plans: React.FC = () => {\n  const location = useLocation<HistoryProps>();\n  const { idSelected } = location.state;\n  const [moreOptionsButton, setMoreOptionsButton] = useState(false);\n\n  const [plans, setPlans] = useState<PlanProps[]>([] as PlanProps[]);\n  const [openModal, setOpenModal] = useState(false);\n  const [exercises, setExercises] = useState<Exercises[]>([]);\n  const [selectedExercises, setSelectedExercises] = useState<\n    ExercisesSelectedProps[]\n  >([]);\n\n  const handleToggleModalAddPlan = useCallback(() => {\n    setOpenModal(!openModal);\n  }, [openModal]);\n\n  const { tabPlanContext } = useTrainingSetup();\n\n  useEffect(() => {\n    listCompletedPlan();\n  }, [tabPlanContext]);\n\n  async function generatePdf(id: string): Promise<void> {\n    try {\n      await api.get(`/plans/generate-pdf/${id}`);\n    } catch (error) {\n      toast.error(error);\n    }\n  }\n\n  const listCompletedPlan = useCallback(async () => {\n    await api\n      .get<ExerciseAndPrescriptionToPlanProps[]>(\n        `/plans/plan-completed/${tabPlanContext}`,\n      )\n      .then(response => {\n        if (response.data.length > 0) {\n          return setSelectedExercises(\n            response.data.map(({ exercise: { id, name }, prescription }) => ({\n              value: id,\n              label: name,\n              prescription,\n            })),\n          );\n        }\n        return setSelectedExercises([]);\n      });\n  }, [tabPlanContext]);\n\n  useEffect(() => {\n    api.get('/exercises').then(response => {\n      setExercises(response.data);\n    });\n  }, []);\n\n  const options = getNameExercises(exercises);\n\n  // eslint-disable-next-line no-shadow\n  function getNameExercises(exercises: Exercises[]): ExercisesSelectedProps[] {\n    const res = exercises.map(({ id, name }) => {\n      return { value: id, label: name };\n    });\n    return res;\n  }\n\n  async function getPlans(id: string): Promise<void> {\n    await api.get(`/plans/${id}`).then(response => {\n      setPlans(response.data);\n    });\n  }\n\n  useEffect(() => {\n    getPlans(idSelected);\n  }, [idSelected]);\n\n  function handleSetSelectedExercises(\n    exercisesSel: OptionsType<ExercisesSelectedProps>,\n  ): void {\n    setSelectedExercises(exercisesSel as ExercisesSelectedProps[]);\n  }\n\n  return (\n    <>\n      <MenuBar />\n      <div id=\"mainContainer\">\n        <Header />\n        <S.Container>\n          <S.ActionArea>\n            <h1>Plan</h1>\n            <S.ButtonArea>\n              <Button\n                outlined\n                outlinedColor=\"#FFBA01\"\n                onClick={() => {\n                  generatePdf(idSelected);\n                }}\n              >\n                Baixar PDF\n              </Button>\n              <Button\n                outlined\n                outlinedColor=\"#FFBA01\"\n                onClick={handleToggleModalAddPlan}\n              >\n                Editar Séries\n              </Button>\n\n              <S.ButtonIcon\n                onClick={() => setMoreOptionsButton(!moreOptionsButton)}\n              >\n                {/* <RiMore2Fill size={48} /> */}A\n                {moreOptionsButton && <DropdownPlansActions />}\n              </S.ButtonIcon>\n            </S.ButtonArea>\n          </S.ActionArea>\n\n          <Tabs tabsApi={plans} />\n\n          <S.Label>\n            <p>Exercícios selecionados</p>\n          </S.Label>\n\n          <S.SelectContainer>\n            <Select\n              options={options}\n              isMulti\n              onChange={(e: OptionsType<ExercisesSelectedProps>) => {\n                handleSetSelectedExercises(e);\n              }}\n              value={selectedExercises}\n              isDisabled={plans.length === 0}\n            />\n            <Button background=\"#FFBA01\">CONCLUIR TREINO</Button>\n          </S.SelectContainer>\n\n          <table>\n            <thead>\n              <tr>\n                <th>Nome</th>\n                <th>Séries</th>\n                <th>Repetições</th>\n                <th>Carga</th>\n                <th>Intervalo</th>\n                <th>Observação</th>\n                <th>Excluir</th>\n              </tr>\n            </thead>\n            <tbody>\n              {selectedExercises &&\n                selectedExercises.map(({ label, value, prescription }) => (\n                  <ExerciseRow\n                    key={value}\n                    exercise={{ name: label, id: value }}\n                    plan_id={tabPlanContext}\n                    prescriptionValue={prescription}\n                    loadPlanCompleted={listCompletedPlan}\n                  >\n                    {label}\n                  </ExerciseRow>\n                ))}\n            </tbody>\n          </table>\n        </S.Container>\n        <ModalAddPlan\n          isOpen={openModal}\n          setIsOpen={handleToggleModalAddPlan}\n          plans={plans}\n          getPlans={() => getPlans(idSelected)}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Plans;\n",["223","224","225","226","227"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SpaceBetween\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Drawer\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\index.tsx",[],["228","229","230","231","232"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\index.tsx",["233"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\styles.ts",[],["234","235","236","237","238"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\Item\\index.tsx",[],["239","240","241","242","243"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\index.tsx",["244","245"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownPlansActions\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\components\\SkeletonContainerGrid\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\TextPlaceholder\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SpaceBetween\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\TrainingSetupContext.tsx",["246"],"import React, {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from 'react';\n\n// interface Exercise {\n//   name: string;\n//   exerciseId: string;\n//   prescription: Prescription;\n// }\n\ninterface Prescription {\n  prescriptionId: string;\n  repetition: string;\n  serie: string;\n  weight: string;\n  interval: string;\n  observation: string;\n}\n\ninterface TrainingContextCompletedProps {\n  planName: string;\n  exercises: ExercisesSelectedProps[];\n}\n\ninterface ExercisesSelectedProps {\n  value: string;\n  label: string;\n  prescription: Prescription;\n}\n\ninterface TrainingSetupContextProps {\n  trainingCompleted: TrainingContextCompletedProps[];\n  setupPlan: (training: TrainingContextCompletedProps) => void;\n  tabPlanContext: string;\n  changeTabPlanActive: (name: string) => void;\n}\n\ninterface TrainingSetupProviderProps {\n  children: ReactNode;\n}\n\nconst TrainingSetupContext = createContext<TrainingSetupContextProps>(\n  {} as TrainingSetupContextProps,\n);\n\nexport const TrainingSetupProvider: React.FC<TrainingSetupProviderProps> = ({\n  children,\n}) => {\n  // const trainingCompleted: TrainingsProps[] = [];\n  const [tabContextActive, setTabContextActive] = useState('');\n\n  function changeTabActive(name: string): void {\n    setTabContextActive(name);\n  }\n\n  // COMPLETO\n  const [trainingCompleted, setTrainingCompleted] = useState<\n    TrainingContextCompletedProps[]\n  >({} as TrainingContextCompletedProps[]);\n\n  const changeCompletedTraining = useCallback(plan => {\n    const newTrainingCompleted = {\n      ...trainingCompleted,\n      plan,\n    };\n    setTrainingCompleted(newTrainingCompleted);\n  }, []);\n\n  const setupPlan = useCallback(\n    plan => {\n      // changeCompletedTraining(plan);\n      changeCompletedTraining(plan);\n    },\n    [changeCompletedTraining],\n  );\n\n  return (\n    <TrainingSetupContext.Provider\n      value={{\n        trainingCompleted,\n        changeTabPlanActive: changeTabActive,\n        setupPlan,\n        tabPlanContext: tabContextActive,\n      }}\n    >\n      {children}\n    </TrainingSetupContext.Provider>\n  );\n};\n\nexport function useTrainingSetup(): TrainingSetupContextProps {\n  const context = useContext(TrainingSetupContext);\n\n  if (!context) {\n    throw new Error('use... must be used within an TrainingProvider');\n  }\n\n  return context;\n}\n",["247","248","249","250","251"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\Route.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ConfirmationDeletePlanModal\\index.tsx",[],["252","253","254","255","256"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\ContainerSkeleton\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Separator\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\styles\\global.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SkeletonPlaceholder\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsStudents\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DrawerEditTraining\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\services\\api.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ModalExercise\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ModalExercise\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\SkeletonPlaceholder\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DrawerEditTraining\\index.tsx",["257"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddPlan\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsStudents\\index.tsx",["258","259"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Skeleton\\Item\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ConfirmationDeletePlanModal\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\modals\\ModalAddTraining\\index.tsx",[],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":138,"column":6,"nodeType":"272","endLine":138,"endColumn":33,"suggestions":"273"},{"ruleId":"270","severity":1,"message":"274","line":174,"column":5,"nodeType":"272","endLine":174,"endColumn":12,"suggestions":"275"},{"ruleId":"260","replacedBy":"276"},{"ruleId":"262","replacedBy":"277"},{"ruleId":"264","replacedBy":"278"},{"ruleId":"266","replacedBy":"279"},{"ruleId":"268","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":50,"column":11,"nodeType":"283","messageId":"284","endLine":50,"endColumn":40},{"ruleId":"270","severity":1,"message":"285","line":99,"column":6,"nodeType":"272","endLine":99,"endColumn":22,"suggestions":"286"},{"ruleId":"260","replacedBy":"287"},{"ruleId":"262","replacedBy":"288"},{"ruleId":"264","replacedBy":"289"},{"ruleId":"266","replacedBy":"290"},{"ruleId":"268","replacedBy":"291"},{"ruleId":"260","replacedBy":"292"},{"ruleId":"262","replacedBy":"293"},{"ruleId":"264","replacedBy":"294"},{"ruleId":"266","replacedBy":"295"},{"ruleId":"268","replacedBy":"296"},{"ruleId":"270","severity":1,"message":"297","line":101,"column":5,"nodeType":"272","endLine":101,"endColumn":7,"suggestions":"298"},{"ruleId":"260","replacedBy":"299"},{"ruleId":"262","replacedBy":"300"},{"ruleId":"264","replacedBy":"301"},{"ruleId":"266","replacedBy":"302"},{"ruleId":"268","replacedBy":"303"},{"ruleId":"260","replacedBy":"304"},{"ruleId":"262","replacedBy":"305"},{"ruleId":"264","replacedBy":"306"},{"ruleId":"266","replacedBy":"307"},{"ruleId":"268","replacedBy":"308"},{"ruleId":"309","severity":2,"message":"310","line":12,"column":30,"nodeType":"311","endLine":12,"endColumn":67},{"ruleId":"312","severity":2,"message":"313","line":12,"column":30,"nodeType":"311","endLine":12,"endColumn":67},{"ruleId":"270","severity":1,"message":"314","line":71,"column":6,"nodeType":"272","endLine":71,"endColumn":8,"suggestions":"315"},{"ruleId":"260","replacedBy":"316"},{"ruleId":"262","replacedBy":"317"},{"ruleId":"264","replacedBy":"318"},{"ruleId":"266","replacedBy":"319"},{"ruleId":"268","replacedBy":"320"},{"ruleId":"260","replacedBy":"321"},{"ruleId":"262","replacedBy":"322"},{"ruleId":"264","replacedBy":"323"},{"ruleId":"266","replacedBy":"324"},{"ruleId":"268","replacedBy":"325"},{"ruleId":"270","severity":1,"message":"326","line":90,"column":5,"nodeType":"272","endLine":90,"endColumn":12,"suggestions":"327"},{"ruleId":"281","severity":1,"message":"328","line":1,"column":17,"nodeType":"283","messageId":"284","endLine":1,"endColumn":28},{"ruleId":"281","severity":1,"message":"329","line":13,"column":3,"nodeType":"283","messageId":"284","endLine":13,"endColumn":18},"lines-around-directive",["330"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterUsers'. Either include it or remove the dependency array.","ArrayExpression",["331"],"React Hook useCallback has a missing dependency: 'filterUsers'. Either include it or remove the dependency array.",["332"],["330"],[],[],[],[],"@typescript-eslint/no-unused-vars","'TrainingContextCompletedProps' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'listCompletedPlan'. Either include it or remove the dependency array.",["333"],["330"],[],[],[],[],["330"],[],[],[],[],"React Hook useCallback has a missing dependency: 'updateStudents'. Either include it or remove the dependency array. If 'updateStudents' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["334"],["330"],[],[],[],[],["330"],[],[],[],[],"import/extensions","Missing file extension for \"../../..components/ModalAddTraining\"","Literal","import/no-unresolved","Unable to resolve path to module '../../..components/ModalAddTraining'.","React Hook useCallback has a missing dependency: 'trainingCompleted'. Either include it or remove the dependency array.",["335"],["330"],[],[],[],[],["330"],[],[],[],[],"React Hook useCallback has a missing dependency: 'updateTrainings'. Either include it or remove the dependency array. If 'updateTrainings' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["336"],"'useCallback' is defined but never used.","'handleOpenModal' is defined but never used.","padding-line-between-statements",{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},"Update the dependencies array to be: [filterSelectedTypeStudent, filterUsers]",{"range":"349","text":"350"},"Update the dependencies array to be: [filterUsers, users]",{"range":"351","text":"352"},"Update the dependencies array to be: [listCompletedPlan, tabPlanContext]",{"range":"353","text":"354"},"Update the dependencies array to be: [updateStudents]",{"range":"355","text":"356"},"Update the dependencies array to be: [trainingCompleted]",{"range":"357","text":"358"},"Update the dependencies array to be: [updateTrainings]",{"range":"359","text":"360"},[4025,4052],"[filterSelectedTypeStudent, filterUsers]",[4981,4988],"[filterUsers, users]",[2503,2519],"[listCompletedPlan, tabPlanContext]",[2620,2622],"[updateStudents]",[1627,1629],"[trainingCompleted]",[2193,2200],"[updateTrainings]"]