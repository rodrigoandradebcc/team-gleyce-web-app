[{"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\index.tsx":"1","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\styles.ts":"2","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\styles.ts":"3","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\styles.ts":"4","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\index.tsx":"5","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\App.tsx":"6","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\index.tsx":"7","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\styles.ts":"8","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Avatar\\styles.ts":"9","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\index.tsx":"10","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\index.tsx":"11","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\index.tsx":"12","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\styles.ts":"13","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Card\\styles.tsx":"14","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\styles.ts":"15","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\styles\\global.ts":"16","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\styles.ts":"17","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\index.tsx":"18","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\styles.ts":"19","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\index.tsx":"20","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\index.tsx":"21","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\index.tsx":"22","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\index.tsx":"23","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\styles.ts":"24","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\styles.ts":"25","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\index.tsx":"26","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\index.tsx":"27","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\index.tsx":"28","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\styles.ts":"29","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\styles.ts":"30","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\index.tsx":"31","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\index.tsx":"32","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\AuthContext.tsx":"33","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\styles.ts":"34","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\styles.ts":"35","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\index.tsx":"36","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\styles.ts":"37","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\styles.ts":"38","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\Route.tsx":"39","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\index.tsx":"40","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\styles.ts":"41","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\styles.ts":"42","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\index.tsx":"43","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalDeleteExercise\\index.tsx":"44","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\index.tsx":"45","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\styles.ts":"46","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\services\\api.ts":"47","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\components\\ExerciseRow\\index.tsx":"48","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\styles.ts":"49","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\InputTextArea\\styles.ts":"50","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\TrainingSetupContext.tsx":"51","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\index.tsx":"52","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\index.tsx":"53","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\styles.ts":"54","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\index.tsx":"55","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddPlan\\index.tsx":"56","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddPlan\\styles.ts":"57","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Card\\index.tsx":"58","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\SearchInput\\index.tsx":"59","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\index.tsx":"60","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\InputTextArea\\index.tsx":"61","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Avatar\\index.tsx":"62","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalDeleteExercise\\styles.ts":"63","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\SearchInput\\styles.ts":"64","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\styles.ts":"65","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsTrainings\\index.tsx":"66"},{"size":3055,"mtime":1620611778222,"results":"67","hashOfConfig":"68"},{"size":3258,"mtime":1621734793435,"results":"69","hashOfConfig":"68"},{"size":390,"mtime":1621731078913,"results":"70","hashOfConfig":"68"},{"size":1383,"mtime":1620012300125,"results":"71","hashOfConfig":"68"},{"size":5198,"mtime":1621695333592,"results":"72","hashOfConfig":"68"},{"size":625,"mtime":1620704445416,"results":"73","hashOfConfig":"68"},{"size":4412,"mtime":1621743567141,"results":"74","hashOfConfig":"68"},{"size":1471,"mtime":1619980611153,"results":"75","hashOfConfig":"68"},{"size":918,"mtime":1620012133827,"results":"76","hashOfConfig":"68"},{"size":1282,"mtime":1620958241621,"results":"77","hashOfConfig":"68"},{"size":451,"mtime":1619980611085,"results":"78","hashOfConfig":"68"},{"size":2686,"mtime":1619980611103,"results":"79","hashOfConfig":"68"},{"size":241,"mtime":1621696683139,"results":"80","hashOfConfig":"68"},{"size":1365,"mtime":1619980611088,"results":"81","hashOfConfig":"68"},{"size":834,"mtime":1619980611098,"results":"82","hashOfConfig":"68"},{"size":2237,"mtime":1621703504618,"results":"83","hashOfConfig":"68"},{"size":2037,"mtime":1619980611148,"results":"84","hashOfConfig":"68"},{"size":5163,"mtime":1621733227882,"results":"85","hashOfConfig":"68"},{"size":2040,"mtime":1621736206502,"results":"86","hashOfConfig":"68"},{"size":2226,"mtime":1621735724620,"results":"87","hashOfConfig":"68"},{"size":2308,"mtime":1619980611098,"results":"88","hashOfConfig":"68"},{"size":837,"mtime":1620611061547,"results":"89","hashOfConfig":"68"},{"size":1845,"mtime":1620919178586,"results":"90","hashOfConfig":"68"},{"size":1434,"mtime":1620650105096,"results":"91","hashOfConfig":"68"},{"size":593,"mtime":1619980611091,"results":"92","hashOfConfig":"68"},{"size":2173,"mtime":1619980611138,"results":"93","hashOfConfig":"68"},{"size":5640,"mtime":1620608032900,"results":"94","hashOfConfig":"68"},{"size":1875,"mtime":1619980611101,"results":"95","hashOfConfig":"68"},{"size":3860,"mtime":1620012133828,"results":"96","hashOfConfig":"68"},{"size":954,"mtime":1620918535545,"results":"97","hashOfConfig":"68"},{"size":2684,"mtime":1620607336160,"results":"98","hashOfConfig":"68"},{"size":1282,"mtime":1620919172158,"results":"99","hashOfConfig":"68"},{"size":2206,"mtime":1620618119611,"results":"100","hashOfConfig":"68"},{"size":1553,"mtime":1619980611101,"results":"101","hashOfConfig":"68"},{"size":1098,"mtime":1620012133830,"results":"102","hashOfConfig":"68"},{"size":198,"mtime":1619980611146,"results":"103","hashOfConfig":"68"},{"size":608,"mtime":1621736827791,"results":"104","hashOfConfig":"68"},{"size":3417,"mtime":1620958511945,"results":"105","hashOfConfig":"68"},{"size":785,"mtime":1620612736251,"results":"106","hashOfConfig":"68"},{"size":671,"mtime":1619980611094,"results":"107","hashOfConfig":"68"},{"size":2477,"mtime":1620012133830,"results":"108","hashOfConfig":"68"},{"size":1149,"mtime":1620957726985,"results":"109","hashOfConfig":"68"},{"size":4609,"mtime":1621735321575,"results":"110","hashOfConfig":"68"},{"size":1245,"mtime":1619980611137,"results":"111","hashOfConfig":"68"},{"size":1954,"mtime":1620957416354,"results":"112","hashOfConfig":"68"},{"size":1523,"mtime":1619980611138,"results":"113","hashOfConfig":"68"},{"size":116,"mtime":1619980611157,"results":"114","hashOfConfig":"68"},{"size":1538,"mtime":1620697019439,"results":"115","hashOfConfig":"68"},{"size":2219,"mtime":1619980611150,"results":"116","hashOfConfig":"68"},{"size":322,"mtime":1619980611097,"results":"117","hashOfConfig":"68"},{"size":2418,"mtime":1621110675197,"results":"118","hashOfConfig":"68"},{"size":1692,"mtime":1621701675536,"results":"119","hashOfConfig":"68"},{"size":838,"mtime":1621703960681,"results":"120","hashOfConfig":"68"},{"size":1566,"mtime":1621702531005,"results":"121","hashOfConfig":"68"},{"size":768,"mtime":1621732251357,"results":"122","hashOfConfig":"68"},{"size":2454,"mtime":1621693452874,"results":"123","hashOfConfig":"68"},{"size":648,"mtime":1621397008191,"results":"124","hashOfConfig":"68"},{"size":606,"mtime":1619980611087,"results":"125","hashOfConfig":"68"},{"size":882,"mtime":1619980611142,"results":"126","hashOfConfig":"68"},{"size":449,"mtime":1619980611090,"results":"127","hashOfConfig":"68"},{"size":522,"mtime":1619980611096,"results":"128","hashOfConfig":"68"},{"size":581,"mtime":1619980611083,"results":"129","hashOfConfig":"68"},{"size":682,"mtime":1619980967597,"results":"130","hashOfConfig":"68"},{"size":677,"mtime":1619980611143,"results":"131","hashOfConfig":"68"},{"size":475,"mtime":1621703992376,"results":"132","hashOfConfig":"68"},{"size":1187,"mtime":1621743540292,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mln35o",{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"157"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"160"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\styles.ts",[],["292","293","294","295","296"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\index.tsx",["297"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Select, { OptionsType } from 'react-select';\nimport Button from '../../components/ButtonRod';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\nimport ModalAddPlan from '../../components/ModalAddPlan';\nimport Tabs from '../../components/TabsPlans';\nimport { useTrainingSetup } from '../../hooks/TrainingSetupContext';\nimport api from '../../services/api';\nimport ExerciseRow from './components/ExerciseRow';\nimport * as S from './styles';\n\ninterface HistoryProps {\n  idSelected: string;\n}\n\nexport interface PlanProps {\n  id: string;\n  description: string;\n}\n\ninterface Exercises {\n  id: string;\n  name: string;\n  exercise_group: string;\n  link: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\ninterface ExercisesSelectedProps {\n  value: string;\n  label: string;\n}\n\ninterface Prescription {\n  prescriptionId: string;\n  repetition: string;\n  serie: string;\n  weight: string;\n  interval: string;\n  observation: string;\n}\n\ninterface TrainingContextCompletedProps {\n  planName: string;\n  exercises: ExercisesSelectedContextProps[];\n}\n\ninterface ExercisesSelectedContextProps {\n  value: string;\n  label: string;\n  prescription: Prescription;\n}\n\nconst Plans: React.FC = () => {\n  const location = useLocation<HistoryProps>();\n  const { idSelected: planIdSelected } = location.state;\n\n  const [plans, setPlans] = useState<PlanProps[]>([] as PlanProps[]);\n  const [openModal, setOpenModal] = useState(false);\n  const [exercises, setExercises] = useState<Exercises[]>([]);\n  const [selectedExercises, setSelectedExercises] = useState<\n    ExercisesSelectedProps[]\n  >([]);\n\n  const handleToggleModalAddPlan = useCallback(() => {\n    setOpenModal(!openModal);\n  }, [openModal]);\n\n  const { setupPlan, tabPlanContext } = useTrainingSetup();\n\n  const mockPrescription = {\n    prescriptionId: '1',\n    repetition: 'string',\n    serie: 'string',\n    weight: 'string',\n    interval: 'string',\n    observation: 'string',\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function mountObjectTrainingCompleted(\n    selectedTab: string,\n  ): TrainingContextCompletedProps {\n    let newExercises: ExercisesSelectedContextProps[] = [];\n    newExercises = [];\n\n    selectedExercises.map(item => {\n      return newExercises.push({\n        ...item,\n        prescription: mockPrescription,\n      });\n    });\n\n    return {\n      planName: selectedTab,\n      exercises: newExercises,\n    };\n  }\n\n  useEffect(() => {\n    setupPlan(mountObjectTrainingCompleted(tabPlanContext));\n  }, [selectedExercises, tabPlanContext]);\n\n  const options = getNameExercises(exercises);\n\n  // eslint-disable-next-line no-shadow\n  function getNameExercises(exercises: Exercises[]): ExercisesSelectedProps[] {\n    const res = exercises.map(({ id, name }) => {\n      return { value: id, label: name };\n    });\n    return res;\n  }\n\n  useEffect(() => {\n    api.get('/exercises').then(response => {\n      setExercises(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    const getPlansToUser = async (id: string): Promise<void> => {\n      await api.get(`/plans/${id}`).then(response => {\n        setPlans(response.data);\n      });\n    };\n    getPlansToUser(planIdSelected);\n  }, [planIdSelected, plans]);\n\n  function handleSetSelectedExercises(\n    exercisesSel: OptionsType<ExercisesSelectedProps>,\n  ): void {\n    setSelectedExercises(exercisesSel as ExercisesSelectedProps[]);\n  }\n\n  return (\n    <>\n      <MenuBar />\n      <div id=\"mainContainer\">\n        <Header />\n        <S.Container>\n          <S.LabelAndButton>\n            <h1>Plan</h1>\n            <Button outlined outlinedColor=\"#FFBA01\" type=\"submit\">\n              SALVAR TREINO\n            </Button>\n          </S.LabelAndButton>\n\n          <Tabs\n            tabsApi={plans}\n            handleOpenModal={openModalState => setOpenModal(openModalState)}\n          />\n\n          <S.SelectContainer>\n            <S.SelectAndButton>\n              <Select\n                options={options}\n                isMulti\n                onChange={(e: OptionsType<ExercisesSelectedProps>) => {\n                  handleSetSelectedExercises(e);\n                }}\n              />\n            </S.SelectAndButton>\n            <Button background=\"#FFBA01\">CADASTRAR EXERCÍCIO</Button>\n          </S.SelectContainer>\n\n          <table>\n            <thead>\n              <tr>\n                <th>Nome</th>\n                <th>Séries</th>\n                <th>Repetições</th>\n                <th>Carga</th>\n                <th>Intervalo</th>\n                <th>Observação</th>\n                <th>Excluir</th>\n              </tr>\n            </thead>\n            <tbody>\n              {selectedExercises &&\n                selectedExercises.map(({ label, value }) => (\n                  <ExerciseRow key={value} nameExercise={label}>\n                    {label}\n                  </ExerciseRow>\n                ))}\n            </tbody>\n          </table>\n        </S.Container>\n        <ModalAddPlan isOpen={openModal} setIsOpen={handleToggleModalAddPlan} />\n      </div>\n    </>\n  );\n};\n\nexport default Plans;\n",["298","299","300","301","302"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\App.tsx",[],["303","304","305","306","307"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\index.tsx",["308","309"],"import { format, parseISO } from 'date-fns';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { IoMdCalendar } from 'react-icons/io';\nimport { MdModeEdit } from 'react-icons/md';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Avatar from '../../components/Avatar';\nimport ButtonRod from '../../components/ButtonRod';\nimport DropdownMenu from '../../components/DropdownMenu';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\nimport ModalAddTraining from '../../components/ModalAddTraining';\nimport Tabs from '../../components/TabsTrainings';\nimport api from '../../services/api';\nimport * as S from './styles';\n\ninterface HistoryProps {\n  idSelected: string;\n  studentName: string;\n}\n\ninterface TrainingProps {\n  id: string;\n  name: string;\n  observation: string;\n  note: string;\n  expiration_date: string;\n}\n\nconst Training: React.FC = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const handleToggleModalAddTraining = useCallback(() => {\n    setModalOpen(!modalOpen);\n  }, [modalOpen]);\n\n  const trainingTypes = [\n    { id: '1', description: 'Todos' },\n    { id: '2', description: 'Ativos' },\n    { id: '3', description: 'Inativos' },\n  ];\n\n  const [typeTrainingActive, setTypeTrainingActive] = useState(\n    trainingTypes[0].description,\n  );\n\n  const location = useLocation<HistoryProps>();\n\n  const { idSelected, studentName } = location.state;\n\n  const [trainings, setTrainings] = useState<TrainingProps[]>();\n\n  const history = useHistory();\n\n  const [idAtualSelecionado, setIdAtualSelecionado] = useState('');\n\n  // useEffect(() => {\n  //   console.log('O SELECIONADO', idSelected);\n  //   setIdAtualSelecionado(idSelected);\n  // }, [idSelected]);\n\n  const getTrainings = (id: string): void => {\n    api.get(`/trainings/${id}`).then(response => {\n      setTrainings(response.data);\n    });\n  };\n\n  function teste(content: string): void {\n    setTypeTrainingActive(content);\n  }\n\n  async function handleUpdateSelectedTraining(id: string): Promise<void> {\n    setIdAtualSelecionado(id);\n  }\n\n  useEffect(() => {\n    getTrainings(idSelected);\n  }, [idSelected, trainings]);\n\n  return (\n    <>\n      <MenuBar />\n      <div id=\"mainContainer\">\n        <Header />\n        <S.Container>\n          <S.NameAndLogoContainer>\n            <p>{studentName}</p>\n\n            <Avatar src=\"\" userName={studentName} size={2} />\n          </S.NameAndLogoContainer>\n\n          <Tabs tabsApi={trainingTypes} setTypeTrainingActive={teste} />\n\n          <S.ButtonArea>\n            <ButtonRod\n              background=\"#FCA311\"\n              onClick={() => {\n                handleToggleModalAddTraining();\n              }}\n            >\n              CADASTRAR TREINO\n            </ButtonRod>\n          </S.ButtonArea>\n\n          <S.ContainerCards>\n            {trainings?.map(({ name, expiration_date, observation, id }) => (\n              <S.TrainingCard key={id}>\n                <S.NameAndExpirationDate>\n                  <strong>{name}</strong>\n                  <div>\n                    <IoMdCalendar size={16} />\n                    <p>\n                      Venc: {format(parseISO(expiration_date), 'dd/MM/yyyy')}\n                    </p>\n                  </div>\n                </S.NameAndExpirationDate>\n\n                <S.ButtonActionsContainer>\n                  <S.BtnEditTraining\n                    onClick={() => {\n                      history.push('/plans', {\n                        idSelected: id,\n                      });\n                    }}\n                  >\n                    <MdModeEdit size={16} />\n                    EDITAR EXERCÍCIOS\n                  </S.BtnEditTraining>\n                  <DropdownMenu\n                    id={id}\n                    handleUpdateSelectedTrainning={handleUpdateSelectedTraining}\n                    idActualSelectedTeste={idAtualSelecionado}\n                  />\n                </S.ButtonActionsContainer>\n              </S.TrainingCard>\n            ))}\n          </S.ContainerCards>\n          {/* <strong>TREINOS ATIVOS ({trainings?.length})</strong> */}\n\n          {/* <S.InactiveTraininigs>TREINOS INATIVOS (0)</S.InactiveTraininigs> */}\n          <ModalAddTraining\n            isOpen={modalOpen}\n            setIsOpen={handleToggleModalAddTraining}\n          />\n        </S.Container>\n      </div>\n    </>\n  );\n};\n\nexport default Training;\n","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Avatar\\styles.ts",[],["310","311","312","313","314"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\index.tsx",[],["315","316","317","318","319"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\index.tsx",[],["320","321","322","323","324"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonIcon\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Card\\styles.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\styles\\global.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\styles.ts",[],["325","326","327","328","329"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddStudent\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Training\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\index.tsx",["330"],"import { format } from 'date-fns';\nimport React, { ButtonHTMLAttributes, useCallback } from 'react';\nimport { ImWhatsapp } from 'react-icons/im';\nimport { useHistory } from 'react-router';\nimport Avatar from '../Avatar';\nimport ButtonRod from '../ButtonRod';\nimport {\n  ActionsContainer,\n  Bottom,\n  Container,\n  Data,\n  Go,\n  LastAccess,\n  Plan,\n  SendMessage,\n  StudentName,\n  StudentPhoto,\n  Switch,\n  SwitchContainer,\n  Top,\n} from './styles';\n\ninterface CardStudentProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  isActive: boolean;\n  photo: string;\n  name: string;\n  plan_type?: string;\n  last_access: string;\n  handleToggleActiveUser: (id: string) => Promise<void>;\n  id: string;\n}\n\nconst CardStudent: React.FC<CardStudentProps> = ({\n  isActive,\n  name,\n  plan_type,\n  last_access,\n  handleToggleActiveUser,\n  id,\n}) => {\n  const history = useHistory();\n\n  const handleToggleSwitch = useCallback(() => {\n    handleToggleActiveUser(id);\n  }, [handleToggleActiveUser, id]);\n\n  const dateFormatted = format(new Date(last_access), 'dd/mm/yyyy');\n\n  function handleGoToTrainingsPage(): void {\n    console.log(id);\n    history.push('/trainings', {\n      idSelected: id,\n      studentName: name,\n    });\n  }\n\n  return (\n    <Container>\n      <Top>\n        <Data>\n          <SwitchContainer>\n            <Switch onClick={handleToggleSwitch}>\n              <input\n                type=\"checkbox\"\n                checked={isActive}\n                onChange={() => console.log(!isActive)}\n              />\n              <span className=\"slider round\" />\n            </Switch>\n          </SwitchContainer>\n\n          <Plan isActive={isActive}>{plan_type}</Plan>\n          <LastAccess>Venc. {dateFormatted}</LastAccess>\n        </Data>\n\n        <StudentPhoto isActive={isActive}>\n          <Avatar size={5} src=\"\" userName={name} />\n        </StudentPhoto>\n      </Top>\n\n      <Bottom>\n        <StudentName>{name}</StudentName>\n\n        <ActionsContainer>\n          <SendMessage>\n            <ImWhatsapp />\n            Enviar mensagem\n          </SendMessage>\n          <Go onClick={handleGoToTrainingsPage}>Ver Treinos</Go>\n        </ActionsContainer>\n      </Bottom>\n    </Container>\n  );\n};\n\nexport default CardStudent;\n","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\LegacyInput\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\index.tsx",[],["331","332","333","334","335"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\index.tsx",[],["336","337","338","339","340"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\SignIn\\styles.ts",[],["341","342","343","344","345"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\index.tsx",["346"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\index.tsx",["347","348"],"import React, { useEffect, useState, useCallback } from 'react';\nimport { FiYoutube, FiEdit, FiTrash2 } from 'react-icons/fi';\n\nimport api from '../../services/api';\n\nimport ModalAddExercise from '../../components/ModalAddExercise';\nimport ModalEditExercise from '../../components/ModalEditExercise';\nimport ModalDeleteExercise from '../../components/ModalDeleteExercise';\n\nimport {\n  Container,\n  Welcome,\n  Message,\n  ScreenName,\n  ExerciseList,\n  Head,\n  HeadColumn,\n  RegisterButton,\n  Body,\n  Line,\n  Column,\n  Name,\n  Group,\n  LinkVideo,\n  Actions,\n  EmptySpace,\n} from './styles';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\n\ninterface IExercise {\n  exercise_group: string;\n  id: string;\n  link: string;\n  name: string;\n}\n\nconst Exercises: React.FC = () => {\n  const [exercises, setExercises] = useState<IExercise[]>([]);\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [editingExercise, setEditingExercise] = useState<IExercise>(\n    {} as IExercise,\n  );\n  const [deletingExercise, setDeletingExercise] = useState('');\n\n  useEffect(() => {\n    async function getExercises(): Promise<void> {\n      const { data: exercisesReturned } = await api.get<IExercise[]>(\n        '/exercises',\n      );\n\n      setExercises(exercisesReturned);\n    }\n\n    getExercises();\n  }, [setExercises, refresh]);\n\n  const handleToggleModal = useCallback(() => {\n    setModalOpen(!modalOpen);\n  }, [modalOpen]);\n\n  const handleToggleEditModal = useCallback(() => {\n    setEditModalOpen(!editModalOpen);\n  }, [editModalOpen]);\n\n  const handleToggleDeleteModal = useCallback(\n    (id: string) => {\n      setDeleteModalOpen(!deleteModalOpen);\n      setDeletingExercise(id);\n    },\n    [deleteModalOpen],\n  );\n\n  const handleAddExercise = useCallback(\n    async (newExercise: IExercise) => {\n      try {\n        const { data: exerciseCreated } = await api.post<IExercise>(\n          '/exercises',\n          newExercise,\n        );\n\n        setExercises([...exercises, exerciseCreated]);\n      } catch ({ err }) {\n        console.log(err);\n      }\n    },\n    [exercises],\n  );\n\n  const handleUpdateExercise = useCallback(async (exercise: IExercise) => {\n    try {\n      await api.put(`/exercises/${exercise.id}`, exercise);\n      setRefresh(!refresh);\n    } catch ({ err }) {\n      console.log(err);\n    }\n  }, []);\n\n  const handleDeleteExercise = useCallback(async (id: string) => {\n    console.log(id);\n    try {\n      await api.delete(`/exercises/${id}`);\n      setRefresh(!refresh);\n    } catch ({ err }) {\n      console.log(err);\n    }\n  }, []);\n\n  const handleEditExercise = useCallback(\n    (exercise: IExercise) => {\n      setEditingExercise(exercise);\n      handleToggleEditModal();\n    },\n    [handleToggleEditModal],\n  );\n\n  return (\n    <>\n      <MenuBar />\n\n      <div id=\"mainContainer\">\n        <Header />\n\n        <Container>\n          <Welcome>\n            <Message>Bem vindo, FULANO DE TAL</Message>\n            <ScreenName>Exercícios</ScreenName>\n          </Welcome>\n\n          <ExerciseList>\n            <Head>\n              <HeadColumn>NOME</HeadColumn>\n              <HeadColumn>GRUPO DO EXERCÍCIO</HeadColumn>\n              <HeadColumn center>LINK DO VÍDEO</HeadColumn>\n              <HeadColumn center>AÇÕES</HeadColumn>\n              <HeadColumn>\n                <RegisterButton onClick={() => handleToggleModal()}>\n                  CADASTRAR EXERCÍCIO\n                </RegisterButton>\n              </HeadColumn>\n            </Head>\n            <Body>\n              {exercises.map(({ id, name, exercise_group, link }) => (\n                <Line key={id}>\n                  <Column>\n                    <Name>{name}</Name>\n                  </Column>\n                  <Column>\n                    <Group>{exercise_group}</Group>\n                  </Column>\n                  <Column center>\n                    <LinkVideo href={link} target=\"_blank\">\n                      <FiYoutube />\n                    </LinkVideo>\n                  </Column>\n                  <Column>\n                    <Actions>\n                      <FiEdit\n                        onClick={() => {\n                          handleEditExercise({\n                            id,\n                            name,\n                            exercise_group,\n                            link,\n                          });\n                        }}\n                      />\n                      <FiTrash2 onClick={() => handleToggleDeleteModal(id)} />\n                    </Actions>\n                  </Column>\n                  <Column>\n                    <EmptySpace />\n                  </Column>\n                </Line>\n              ))}\n            </Body>\n          </ExerciseList>\n\n          <ModalAddExercise\n            isOpen={modalOpen}\n            setIsOpen={handleToggleModal}\n            handleAddExercise={handleAddExercise}\n          />\n\n          <ModalEditExercise\n            isOpen={editModalOpen}\n            setIsOpen={handleToggleEditModal}\n            handleUpdateExercise={handleUpdateExercise}\n            editingExercise={editingExercise}\n          />\n\n          <ModalDeleteExercise\n            isOpen={deleteModalOpen}\n            setIsOpen={() => setDeleteModalOpen(!deleteModalOpen)}\n            handleDeleteExercise={handleDeleteExercise}\n            deletingExercise={deletingExercise}\n          />\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Exercises;\n",["349","350","351","352","353"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CardStudent\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Dashboard\\index.tsx",["354"],"import React from 'react';\nimport { FiCalendar } from 'react-icons/fi';\nimport Card from '../../components/Card';\nimport Header from '../../components/Header';\nimport MenuBar from '../../components/MenuBar';\n\nimport {\n  Container,\n  CardList,\n  ClassesList,\n  ClassesTitle,\n  ClassesContainer,\n  Class,\n} from './styles';\n\nexport interface PropsPersonalClass {\n  clientName?: string;\n  scheduled?: string;\n  date?: string;\n}\n\nconst Dashboard: React.FC<PropsPersonalClass> = ({ clientName }) => {\n  return (\n    <>\n      <MenuBar />\n\n      <div id=\"mainContainer\">\n        <Header />\n        <Container>\n          <h1>Dashboard</h1>\n          <CardList>\n            <Card\n              numberColor=\"#0096D1\"\n              cardName=\"Vencimentos de hoje\"\n              quantity={5}\n            />\n            <Card\n              numberColor=\"#F44336\"\n              cardName=\"Aulas agendadas pra hoje\"\n              quantity={3}\n            />\n            <Card numberColor=\"#FAC600\" cardName=\"Alunos Ativos\" quantity={2} />\n            <Card\n              numberColor=\"#4CAF50\"\n              cardName=\"Aniversáriantes\"\n              quantity={1}\n            />\n          </CardList>\n          <ClassesList>\n            <ClassesContainer>\n              <ClassesTitle color=\"#e2445c\">\n                <h3>Aulas de Hoje</h3>\n                <FiCalendar />\n              </ClassesTitle>\n              <Class>\n                <h4>\n                  Fulano de Tal <span>09:00</span>\n                </h4>\n                <p>\n                  Personal Trainer <span>10:00</span>\n                </p>\n              </Class>\n              <Class>\n                <h4>\n                  Fulano de Tal <span>09:00</span>\n                </h4>\n                <p>\n                  Personal Trainer <span>10:00</span>\n                </p>\n              </Class>\n            </ClassesContainer>\n            <ClassesContainer>\n              <ClassesTitle color=\"#FAC600\">\n                <h3>Treinos com vencimentos mais próximos</h3>\n                <FiCalendar />\n              </ClassesTitle>\n              <Class>\n                <h4>\n                  Fulano de Tal <span>09:00</span>\n                </h4>\n                <p>\n                  Personal Trainer <span>10:00</span>\n                </p>\n              </Class>\n              <Class>\n                <h4>\n                  Fulano de Tal <span>09:00</span>\n                </h4>\n                <p>\n                  Personal Trainer <span>10:00</span>\n                </p>\n              </Class>\n            </ClassesContainer>\n          </ClassesList>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n",["355","356","357","358","359"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewInput\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\AuthContext.tsx",[],["360","361","362","363","364"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddExercise\\styles.ts",[],["365","366","367","368","369"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\index.tsx",[],["370","371","372","373","374"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddTraining\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ButtonRod\\styles.ts",[],["375","376","377","378","379"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\routes\\Route.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Header\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\MenuBar\\styles.ts",[],["380","381","382","383","384"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Student\\index.tsx",["385"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalDeleteExercise\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\DropdownMenu\\index.tsx",["386","387","388"],"import React, { useEffect, useState } from 'react';\nimport { FiMoreVertical, FiTrash2 } from 'react-icons/fi';\nimport { MdModeEdit } from 'react-icons/md';\nimport ButtonIcon from '../ButtonIcon';\nimport { ButtonIconMenu, Container, ButtonIconDropdown } from './styles';\n\ninterface DropdownMenuProps {\n  id: string;\n  handleUpdateSelectedTrainning: (idActual: string) => void;\n  idActualSelectedTeste: string;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = ({\n  id,\n  handleUpdateSelectedTrainning: handleUpdateSelectedTraining,\n  idActualSelectedTeste,\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isActualVisible, isSetActualVisible] = useState(\n    idActualSelectedTeste === id,\n  );\n\n  useEffect(() => {\n    console.log(`${idActualSelectedTeste === id}`);\n  }, [id, idActualSelectedTeste]);\n\n  return (\n    <Container>\n      <ButtonIconMenu\n        onClick={() => {\n          if (idActualSelectedTeste === id && isVisible) {\n            setIsVisible(false);\n            handleUpdateSelectedTraining('');\n          } else if (\n            idActualSelectedTeste === id ||\n            idActualSelectedTeste === ''\n          ) {\n            handleUpdateSelectedTraining(id);\n            setIsVisible(true);\n          } else if (idActualSelectedTeste !== id) {\n            handleUpdateSelectedTraining(id);\n\n            setIsVisible(true);\n          }\n        }}\n      >\n        <FiMoreVertical size={18} />\n\n        {isVisible && idActualSelectedTeste === id && (\n          <ul>\n            <li>\n              <ButtonIconDropdown>\n                <MdModeEdit size={16} />\n                Editar\n              </ButtonIconDropdown>\n            </li>\n            <li>\n              <ButtonIconDropdown>\n                <FiTrash2 size={16} />\n                Remover\n              </ButtonIconDropdown>\n            </li>\n          </ul>\n        )}\n      </ButtonIconMenu>\n    </Container>\n  );\n};\n\nexport default DropdownMenu;\n","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalEditExercise\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\services\\api.ts",[],["389","390","391","392","393"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Plans\\components\\ExerciseRow\\index.tsx",["394","395"],"import React, { useState } from 'react';\n\ninterface ExerciseRowProps {\n  nameExercise: string;\n}\n\ninterface PrescriptionProps {\n  repetition: string;\n  serie: string;\n  weight: string;\n  interval: string;\n  observation: string;\n}\n\nconst ExerciseRow: React.FC<ExerciseRowProps> = ({\n  children,\n  nameExercise,\n}) => {\n  const [prescription, setPrescription] = useState<PrescriptionProps>(\n    {} as PrescriptionProps,\n  );\n  const [nameExerciseRow, setNameExerciseRow] = useState(nameExercise);\n\n  function handleOnChange(name: string, event: string): void {\n    // const newValue = Object.assign(name, event);\n\n    setPrescription(\n      Object.assign(prescription, {\n        name,\n        event,\n      }),\n    );\n  }\n\n  return (\n    <tr>\n      <td>{children}</td>\n      <td>\n        <input\n          type=\"text\"\n          onChange={e => handleOnChange('repetion', e.target.value)}\n        />\n      </td>\n\n      <td>\n        <input\n          type=\"text\"\n          onChange={e => handleOnChange('serie', e.target.value)}\n        />\n      </td>\n\n      <td>\n        <input\n          type=\"text\"\n          onChange={e => handleOnChange('weight', e.target.value)}\n        />\n      </td>\n\n      <td>\n        <input\n          type=\"text\"\n          onChange={e => handleOnChange('interval', e.target.value)}\n        />\n      </td>\n\n      <td>\n        <input\n          type=\"text\"\n          onChange={e => handleOnChange('observation', e.target.value)}\n        />\n      </td>\n      <td>Excluir</td>\n    </tr>\n  );\n};\n\nexport default ExerciseRow;\n","D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\pages\\Exercises\\styles.ts",[],["396","397","398","399","400"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\InputTextArea\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\hooks\\TrainingSetupContext.tsx",["401","402","403"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\index.tsx",["404"],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsPlans\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\NewSelect\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddPlan\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalAddPlan\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Card\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\SearchInput\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\CircularProgress\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\InputTextArea\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Avatar\\index.tsx",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\ModalDeleteExercise\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\SearchInput\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\Modal\\styles.ts",[],"D:\\Dev\\ProjetosParalelos\\team-gleyce-web-app\\src\\components\\TabsTrainings\\index.tsx",[],{"ruleId":"405","replacedBy":"406"},{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","replacedBy":"412"},{"ruleId":"413","replacedBy":"414"},{"ruleId":"415","severity":1,"message":"416","line":105,"column":6,"nodeType":"417","endLine":105,"endColumn":41,"suggestions":"418"},{"ruleId":"405","replacedBy":"419"},{"ruleId":"407","replacedBy":"420"},{"ruleId":"409","replacedBy":"421"},{"ruleId":"411","replacedBy":"422"},{"ruleId":"413","replacedBy":"423"},{"ruleId":"405","replacedBy":"424"},{"ruleId":"407","replacedBy":"425"},{"ruleId":"409","replacedBy":"426"},{"ruleId":"411","replacedBy":"427"},{"ruleId":"413","replacedBy":"428"},{"ruleId":"429","severity":1,"message":"430","line":42,"column":10,"nodeType":"431","messageId":"432","endLine":42,"endColumn":28},{"ruleId":"429","severity":1,"message":"433","line":105,"column":55,"nodeType":"431","messageId":"432","endLine":105,"endColumn":66},{"ruleId":"405","replacedBy":"434"},{"ruleId":"407","replacedBy":"435"},{"ruleId":"409","replacedBy":"436"},{"ruleId":"411","replacedBy":"437"},{"ruleId":"413","replacedBy":"438"},{"ruleId":"405","replacedBy":"439"},{"ruleId":"407","replacedBy":"440"},{"ruleId":"409","replacedBy":"441"},{"ruleId":"411","replacedBy":"442"},{"ruleId":"413","replacedBy":"443"},{"ruleId":"405","replacedBy":"444"},{"ruleId":"407","replacedBy":"445"},{"ruleId":"409","replacedBy":"446"},{"ruleId":"411","replacedBy":"447"},{"ruleId":"413","replacedBy":"448"},{"ruleId":"405","replacedBy":"449"},{"ruleId":"407","replacedBy":"450"},{"ruleId":"409","replacedBy":"451"},{"ruleId":"411","replacedBy":"452"},{"ruleId":"413","replacedBy":"453"},{"ruleId":"429","severity":1,"message":"454","line":6,"column":8,"nodeType":"431","messageId":"432","endLine":6,"endColumn":17},{"ruleId":"405","replacedBy":"455"},{"ruleId":"407","replacedBy":"456"},{"ruleId":"409","replacedBy":"457"},{"ruleId":"411","replacedBy":"458"},{"ruleId":"413","replacedBy":"459"},{"ruleId":"405","replacedBy":"460"},{"ruleId":"407","replacedBy":"461"},{"ruleId":"409","replacedBy":"462"},{"ruleId":"411","replacedBy":"463"},{"ruleId":"413","replacedBy":"464"},{"ruleId":"405","replacedBy":"465"},{"ruleId":"407","replacedBy":"466"},{"ruleId":"409","replacedBy":"467"},{"ruleId":"411","replacedBy":"468"},{"ruleId":"413","replacedBy":"469"},{"ruleId":"429","severity":1,"message":"470","line":3,"column":16,"nodeType":"431","messageId":"432","endLine":3,"endColumn":20},{"ruleId":"415","severity":1,"message":"471","line":101,"column":6,"nodeType":"417","endLine":101,"endColumn":8,"suggestions":"472"},{"ruleId":"415","severity":1,"message":"471","line":111,"column":6,"nodeType":"417","endLine":111,"endColumn":8,"suggestions":"473"},{"ruleId":"405","replacedBy":"474"},{"ruleId":"407","replacedBy":"475"},{"ruleId":"409","replacedBy":"476"},{"ruleId":"411","replacedBy":"477"},{"ruleId":"413","replacedBy":"478"},{"ruleId":"429","severity":1,"message":"479","line":22,"column":52,"nodeType":"431","messageId":"432","endLine":22,"endColumn":62},{"ruleId":"405","replacedBy":"480"},{"ruleId":"407","replacedBy":"481"},{"ruleId":"409","replacedBy":"482"},{"ruleId":"411","replacedBy":"483"},{"ruleId":"413","replacedBy":"484"},{"ruleId":"405","replacedBy":"485"},{"ruleId":"407","replacedBy":"486"},{"ruleId":"409","replacedBy":"487"},{"ruleId":"411","replacedBy":"488"},{"ruleId":"413","replacedBy":"489"},{"ruleId":"405","replacedBy":"490"},{"ruleId":"407","replacedBy":"491"},{"ruleId":"409","replacedBy":"492"},{"ruleId":"411","replacedBy":"493"},{"ruleId":"413","replacedBy":"494"},{"ruleId":"405","replacedBy":"495"},{"ruleId":"407","replacedBy":"496"},{"ruleId":"409","replacedBy":"497"},{"ruleId":"411","replacedBy":"498"},{"ruleId":"413","replacedBy":"499"},{"ruleId":"405","replacedBy":"500"},{"ruleId":"407","replacedBy":"501"},{"ruleId":"409","replacedBy":"502"},{"ruleId":"411","replacedBy":"503"},{"ruleId":"413","replacedBy":"504"},{"ruleId":"405","replacedBy":"505"},{"ruleId":"407","replacedBy":"506"},{"ruleId":"409","replacedBy":"507"},{"ruleId":"411","replacedBy":"508"},{"ruleId":"413","replacedBy":"509"},{"ruleId":"429","severity":1,"message":"510","line":82,"column":9,"nodeType":"431","messageId":"432","endLine":82,"endColumn":25},{"ruleId":"429","severity":1,"message":"511","line":4,"column":8,"nodeType":"431","messageId":"432","endLine":4,"endColumn":18},{"ruleId":"429","severity":1,"message":"512","line":19,"column":10,"nodeType":"431","messageId":"432","endLine":19,"endColumn":25},{"ruleId":"429","severity":1,"message":"513","line":19,"column":27,"nodeType":"431","messageId":"432","endLine":19,"endColumn":45},{"ruleId":"405","replacedBy":"514"},{"ruleId":"407","replacedBy":"515"},{"ruleId":"409","replacedBy":"516"},{"ruleId":"411","replacedBy":"517"},{"ruleId":"413","replacedBy":"518"},{"ruleId":"429","severity":1,"message":"519","line":22,"column":10,"nodeType":"431","messageId":"432","endLine":22,"endColumn":25},{"ruleId":"429","severity":1,"message":"520","line":22,"column":27,"nodeType":"431","messageId":"432","endLine":22,"endColumn":45},{"ruleId":"405","replacedBy":"521"},{"ruleId":"407","replacedBy":"522"},{"ruleId":"409","replacedBy":"523"},{"ruleId":"411","replacedBy":"524"},{"ruleId":"413","replacedBy":"525"},{"ruleId":"429","severity":1,"message":"526","line":6,"column":3,"nodeType":"431","messageId":"432","endLine":6,"endColumn":12},{"ruleId":"429","severity":1,"message":"527","line":10,"column":11,"nodeType":"431","messageId":"432","endLine":10,"endColumn":19},{"ruleId":"415","severity":1,"message":"528","line":73,"column":6,"nodeType":"417","endLine":73,"endColumn":8,"suggestions":"529"},{"ruleId":"530","severity":1,"message":"531","line":5,"column":13,"nodeType":"532","messageId":"533","endLine":5,"endColumn":16,"suggestions":"534"},"lines-around-directive",["535"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'mountObjectTrainingCompleted' and 'setupPlan'. Either include them or remove the dependency array.","ArrayExpression",["536"],["535"],[],[],[],[],["535"],[],[],[],[],"@typescript-eslint/no-unused-vars","'typeTrainingActive' is assigned a value but never used.","Identifier","unusedVar","'observation' is defined but never used.",["535"],[],[],[],[],["535"],[],[],[],[],["535"],[],[],[],[],["535"],[],[],[],[],"'ButtonRod' is defined but never used.",["535"],[],[],[],[],["535"],[],[],[],[],["535"],[],[],[],[],"'uuid' is defined but never used.","React Hook useCallback has a missing dependency: 'refresh'. Either include it or remove the dependency array. You can also do a functional update 'setRefresh(r => ...)' if you only need 'refresh' in the 'setRefresh' call.",["537"],["538"],["535"],[],[],[],[],"'clientName' is defined but never used.",["535"],[],[],[],[],["535"],[],[],[],[],["535"],[],[],[],[],["535"],[],[],[],[],["535"],[],[],[],[],["535"],[],[],[],[],"'handleAddStudent' is assigned a value but never used.","'ButtonIcon' is defined but never used.","'isActualVisible' is assigned a value but never used.","'isSetActualVisible' is assigned a value but never used.",["535"],[],[],[],[],"'nameExerciseRow' is assigned a value but never used.","'setNameExerciseRow' is assigned a value but never used.",["535"],[],[],[],[],"'useEffect' is defined but never used.","'Exercise' is defined but never used.","React Hook useCallback has a missing dependency: 'trainingCompleted'. Either include it or remove the dependency array.",["539"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["540","541"],"padding-line-between-statements",{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"544","fix":"546"},{"desc":"547","fix":"548"},{"messageId":"549","fix":"550","desc":"551"},{"messageId":"552","fix":"553","desc":"554"},"Update the dependencies array to be: [mountObjectTrainingCompleted, selectedExercises, setupPlan, tabPlanContext]",{"range":"555","text":"556"},"Update the dependencies array to be: [refresh]",{"range":"557","text":"558"},{"range":"559","text":"558"},"Update the dependencies array to be: [trainingCompleted]",{"range":"560","text":"561"},"suggestUnknown",{"range":"562","text":"563"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"562","text":"564"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[2636,2671],"[mountObjectTrainingCompleted, selectedExercises, setupPlan, tabPlanContext]",[2530,2532],"[refresh]",[2765,2767],[1679,1681],"[trainingCompleted]",[137,140],"unknown","never"]